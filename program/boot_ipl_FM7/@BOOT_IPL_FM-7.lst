00001                   ;2023.2.11 リロケータブルに修正
00002                   ;2023.2.12 リロケータブル修正直し切れていなかった
00003                   ;
00004 0790                       ORG     $0790
00005 0790                       
00006      00BF         FILENO   EQU     $00BF         ;ファイル番号
00007      00D2         READ1    EQU     $00D2         ;汎用読み込みルーチン
00008      00D8         READ0    EQU     $00D8         ;汎用読み込みルーチン、ポインタ移動無し
00009      00DE         BIOSV    EQU     $00DE         ;BIOSジャンプルーチン
00010      0203         EXTNUM   EQU     $0203         ;拡張予約語の数
00011      0204         EXTTBL   EQU     $0204         ;拡張予約語の綴りテーブルの先頭アドレス
00012      0210         EXTTRN   EQU     $0210         ;Syntax Errorのアドレス
00013      053F         LBUF     EQU     $053F         ;数値->文字列変換における文字列バッファ(ファイル名受信バッファとして使用)
00014      92A0         ERRENT   EQU     $92A0         ;Syntax Errorエントリ
00015      98F1         GETSTR   EQU     $98F1         ;文字列実効番地読み出し
00016      C495         AZLCNV   EQU     $C495         ;英小文字->大文字変換ルーチン
00017      D90F         LOUT1    EQU     $D90F         ;文字列出力ルーチン
00018      DB54         INPUT1   EQU     $DB54         ;キーボード1Byte入力ルーチン
00019      FBFA         RETADD   EQU     $FBFA         ;本来のBIOSジャンプルーチンエントリ
00020      FE05         SNDBYTE  EQU     $FE05         ;(BOOTROM)Arduinoへ1Byte送信
00021      FE08         RCVBYTE  EQU     $FE08         ;(BOOTROM)Arduinoから1Byte受信
00022      FE0B         MOTOR    EQU     $FE0B         ;(BOOTROM)BIOS[01]モーター制御
00023      FE0E         WRITE1BYTE EQU   $FE0E         ;(BOOTROM)BIOS[02]SD-CARDへ1Byte書き込み
00024      FE11         READ1BYTE EQU    $FE11         ;(BOOTROM)BIOS[03]SD-CARDから1Byte読み込み
00025                   *
00026 0790              START    
00027                   * 拡張コマンドテーブルを#NEWTBLにコピーして拡張コマンド「SDIR」「SETL」「SETS」「SDON」「CMT」を追加
00028 0790 F60203                LDB     EXTNUM        ;B <- 拡張コマンド数
00029 0793 7C0203                INC     EXTNUM        ;拡張コマンド数+1
00030 0796 7C0203                INC     EXTNUM        ;拡張コマンド数+1
00031 0799 7C0203                INC     EXTNUM        ;拡張コマンド数+1
00032 079C 7C0203                INC     EXTNUM        ;拡張コマンド数+1
00033 079F 7C0203                INC     EXTNUM        ;拡張コマンド数+1
00034 07A2 BE0204                LDX     EXTTBL        ;X <- 旧拡張コマンドTBLアドレス
00035 07A5 338D034B              LEAU    NEWTBL,PCR    ;U <- 新拡張コマンドTBLアドレス
00036 07A9 FF0204                STU     EXTTBL        ;拡張コマンドTBLポインタ <- 新拡張コマンドTBLアドレス
00037                   *
00038 07AC A680         COPY     LDA     ,X+           ;拡張コマンドTBLをコピー
00039 07AE A7C0                  STA     ,U+
00040 07B0 2AFA                  BPL     COPY          ;BIT7が1になるまでループ
00041 07B2 5A                    DECB                  ;カウンタ-1
00042 07B3 26F7                  BNE     COPY          ;カウンタが0になるまでループ
00043                   *
00044 07B5 8653                  LDA     #'S           ;「SDIR」コマンドを追加
00045 07B7 C644                  LDB     #'D
00046 07B9 EDC1                  STD     ,U++
00047 07BB 8649                  LDA     #'I
00048 07BD C6D2                  LDB     #'R+$80
00049 07BF EDC1                  STD     ,U++
00050                   *
00051 07C1 8653                  LDA     #'S           ;「SETL」コマンドを追加
00052 07C3 C645                  LDB     #'E
00053 07C5 EDC1                  STD     ,U++
00054 07C7 8654                  LDA     #'T
00055 07C9 C6CC                  LDB     #'L+$80
00056 07CB EDC1                  STD     ,U++
00057                   *
00058 07CD 8653                  LDA     #'S           ;「SETS」コマンドを追加
00059 07CF C645                  LDB     #'E
00060 07D1 EDC1                  STD     ,U++
00061 07D3 8654                  LDA     #'T
00062 07D5 C6D3                  LDB     #'S+$80
00063 07D7 EDC1                  STD     ,U++
00064 07D9                       
00065 07D9 8653                  LDA     #'S           ;「SDON」コマンドを追加
00066 07DB C644                  LDB     #'D
00067 07DD EDC1                  STD     ,U++
00068 07DF 864F                  LDA     #'O
00069 07E1 C6CE                  LDB     #'N+$80
00070 07E3 EDC1                  STD     ,U++
00071 07E5                       
00072 07E5 8643                  LDA     #'C           ;「CMT」コマンドを追加
00073 07E7 C64D                  LDB     #'M
00074 07E9 EDC1                  STD     ,U++
00075 07EB 86D4                  LDA     #'T+$80
00076 07ED C600                  LDB     #$00
00077 07EF EDC0                  STD     ,U+
00078 07F1                       
00079 07F1 308D0016              LEAX    NEWTRN,PCR    ;追加コマンド判定ルーチンアドレス
00080 07F5 BF0210                STX     EXTTRN        ;拡張コマンド判定後のジャンプ先アドレスポインタを追加コマンド判定ルーチンアドレスに書き換え
00081 07F8                       
00082                   *BIOS CWRITE CREADフック
00083 07F8 308D01EE     BIOSF    LEAX    BIOSR,PCR
00084 07FC 9FDF                  STX     BIOSV+1       ;($DF) <- BIOSフック用ルーチンアドレス
00085 07FE                       
00086                   *SD関連書き換え終了メッセージ
00087 07FE 0FBF                  CLR     <FILENO       ;($00BF) <- 0 画面出力へ設定
00088 0800 308D0205              LEAX    MSG1,PCR
00089 0804 BDD90F                JSR     LOUT1         ;「FM-7_SD READY OK!」を表示
00090 0807                       
00091 0807 39                    RTS                   ;BASICへ戻る
00092 0808                       
00093                   *
00094 0808 7E92A0       ERR02    JMP     ERRENT
00095 080B                       
00096                   *追加コマンド判定ルーチン
00097 080B 81F4         NEWTRN   CMPA    #$F4          ;「SDIR」判定
00098 080D 2604                  BNE     NEWTRN2
00099 080F 9DD2                  JSR     READ1         ;入力コマンド解釈ポインタ+1
00100 0811 2024                  BRA     SDIR_PRG
00101 0813 81F5         NEWTRN2  CMPA    #$F5          ;「SETL」判定
00102 0815 2605                  BNE     NEWTRN3
00103 0817 9DD2                  JSR     READ1         ;入力コマンド解釈ポインタ+1
00104 0819 1600F9                LBRA    SETL_PRG
00105 081C 81F6         NEWTRN3  CMPA    #$F6          ;「SETS」判定
00106 081E 2605                  BNE     NEWTRN4
00107 0820 9DD2                  JSR     READ1         ;入力コマンド解釈ポインタ+1
00108 0822 16012E                LBRA    SETS_PRG
00109 0825 81F7         NEWTRN4  CMPA    #$F7          ;「SDON」判定
00110 0827 2605                  BNE     NEWTRN5
00111 0829 9DD2                  JSR     READ1         ;入力コマンド解釈ポインタ+1
00112 082B 160161                LBRA    SDON_PRG
00113 082E 81F8         NEWTRN5  CMPA    #$F8          ;「CMT」判定
00114 0830 26D6                  BNE     ERR02         ;どれでもなければエラー
00115 0832 9DD2                  JSR     READ1         ;入力コマンド解釈ポインタ+1
00116 0834 160168                LBRA    CMT_PRG
00117                   *
00118                   *「SDIR」処理
00119 0837              SDIR_PRG
00120 0837 8652                  LDA     #$52
00121 0839 BDFE05                JSR     SNDBYTE       ;Aレジスタのコマンドコードを送信
00122 083C BDFE08                JSR     RCVBYTE       ;状態取得(00H=OK)
00123 083F 4D                    TSTA
00124 0840 1026016A              LBNE    ERRC
00125 0844                       
00126 0844 9DD8                  JSR     READ0         ;SDIRの次に文字列があるか?
00127 0846 260B                  BNE     SDIR1         ;あればSDIR1へ
00128 0848 4F                    CLRA
00129 0849 BDFE05                JSR     SNDBYTE       ;継続指示
00130 084C 8601                  LDA     #$01
00131 084E BDFE05                JSR     SNDBYTE       ;なければ送信文字列数1文字として終了コード送信へ
00132 0851 2020                  BRA     SDIR3
00133 0853 8122         SDIR1    CMPA    #$22          ;次の文字がダブルコーテーションでなかったらエラー
00134 0855 102600A6              LBNE    ERRNAME
00135 0859 4F                    CLRA
00136 085A BDFE05                JSR     SNDBYTE       ;継続指示
00137 085D BD98F1                JSR     GETSTR        ;文字列取得
00138 0860 3404                  PSHS    B
00139 0862 3502                  PULS    A
00140 0864 4C                    INCA
00141 0865 BDFE05                JSR     SNDBYTE       ;文字列数を送信
00142 0868 A680         SDIR2    LDA     ,X+
00143 086A BDC495                JSR     AZLCNV        ;文字列を1文字取得して大文字に変換
00144 086D BDFE05                JSR     SNDBYTE       ;送信
00145 0870 5A                    DECB
00146 0871 26F5                  BNE     SDIR2
00147 0873                       
00148 0873 4F           SDIR3    CLRA
00149 0874 BDFE05                JSR     SNDBYTE       ;文字列送信終了コード送信
00150 0877                       
00151 0877 BDFE08                JSR     RCVBYTE       ;状態取得(00H=OK)
00152 087A 4D                    TSTA
00153 087B 1026012F              LBNE    ERRC          ;エラー処理へ
00154 087F                       
00155 087F 0FBF                  CLR     <FILENO
00156 0881 108E053F     DL1      LDY     #LBUF         ;Arduinoから送られてくる文字列を#LBUFへ格納
00157 0885 BDFE08       DL2      JSR     RCVBYTE
00158 0888 4D                    TSTA
00159 0889 2710                  BEQ     DL3           ;$00を受信するまでを一行とする
00160 088B 81FF                  CMPA    #$FF
00161 088D 271F                  BEQ     DL4           ;$FFを受信したら終了
00162 088F 81FD                  CMPA    #$FD
00163 0891 271F                  BEQ     DL9           ;$FD受信で文字列を取得してSETLしたことを表示
00164 0893 81FE                  CMPA    #$FE
00165 0895 273B                  BEQ     DL5           ;$FEを受信したら一時停止して一文字入力待ち
00166 0897 A7A0                  STA     ,Y+
00167 0899 20EA                  BRA     DL2
00168 089B                       
00169 089B              DL3
00170 089B 860D                  LDA     #$0D          ;$00を受信したら一行分を表示して改行
00171 089D A7A0                  STA     ,Y+
00172 089F 860A                  LDA     #$0A
00173 08A1 A7A0                  STA     ,Y+
00174 08A3                       
00175 08A3 4F                    CLRA
00176 08A4 A7A0                  STA     ,Y+
00177 08A6 8E053F                LDX     #LBUF
00178 08A9 BDD90F                JSR     LOUT1
00179 08AC 20D3         DL33     BRA     DL1
00180 08AE                       
00181 08AE BDFE08       DL4      JSR     RCVBYTE       ;状態取得(00H=OK)して終了
00182 08B1 39                    RTS
00183 08B2                       
00184 08B2 108E053F     DL9      LDY     #LBUF         ;文字列を取得してSETLしたことを表示
00185 08B6 BDFE08       DL91     JSR     RCVBYTE       ;#LBUFへ文字列格納
00186 08B9 A7A0                  STA     ,Y+
00187 08BB 4D                    TSTA                  ;$00を受信するまで受信処理
00188 08BC 26F8                  BNE     DL91
00189 08BE 8E053F                LDX     #LBUF
00190 08C1 BDD90F                JSR     LOUT1
00191 08C4 308D0155              LEAX    MSG3,PCR
00192 08C8 BDD90F                JSR     LOUT1         ;SETLしたことを表示
00193 08CB BDFE08                JSR     RCVBYTE       ;状態取得読み飛ばし
00194 08CE BDFE08                JSR     RCVBYTE       ;状態取得読み飛ばし
00195 08D1 39                    RTS
00196 08D2                       
00197 08D2 308D0188     DL5      LEAX    MSGKEY,PCR    ;一時停止して一文字入力待ち
00198 08D6 BDD90F                JSR     LOUT1         ;HIT ANT KEY表示
00199 08D9 BDDB54       DL6      JSR     INPUT1
00200 08DC 811B                  CMPA    #$1B
00201 08DE 2717                  BEQ     DL7           ;ESCで打ち切り
00202 08E0 8130                  CMPA    #$30          ;数字0～9ならそのままArduinoへ送信してSETL処理へ
00203 08E2 2504                  BLO     DL61
00204 08E4 813A                  CMPA    #$3A
00205 08E6 2511                  BLO     DL8           
00206 08E8 8142         DL61     CMPA    #$42
00207 08EA 270D                  BEQ     DL8           ;「B」で前ページ
00208 08EC 8162                  CMPA    #$62
00209 08EE 2703                  BEQ     DL62          ;「b」で前ページ
00210 08F0 4F                    CLRA
00211 08F1 2006                  BRA     DL8           ;それ以外で継続
00212 08F3 8642         DL62     LDA     #$42          ;b->B
00213 08F5 2002                  BRA     DL8
00214 08F7 86FF         DL7      LDA     #$FF
00215 08F9 BDFE05       DL8      JSR     SNDBYTE
00216 08FC 2087                  BRA     DL2
00217 08FE                       
00218 08FE 39           SDIR99   RTS
00219 08FF                       
00220 08FF 3402         ERRNAME  PSHS    A
00221 0901 86FF                  LDA     #$FF
00222 0903 BDFE05                JSR     SNDBYTE       ;打ち切り指示
00223 0906 3502                  PULS    A
00224 0908 4D                    TSTA                  ;$00ならポインタを進めない SETL SETSのみはERROR
00225 0909 2705                  BEQ     ERRNM2
00226 090B 9DD2         ERRNM1   JSR     READ1         ;入力コマンド解釈ポインタ+1
00227 090D 4D                    TSTA
00228 090E 26FB                  BNE     ERRNM1
00229 0910 86F5         ERRNM2   LDA     #$F5          ;NOT DOUBLE QUOTATION表示
00230 0912 160099                LBRA    ERRC
00231 0915                       
00232                   *「SETL」処理
00233 0915              SETL_PRG
00234 0915 8653                  LDA     #$53
00235 0917 BDFE05                JSR     SNDBYTE       ;Aレジスタのコマンドコードを送信
00236 091A BDFE08                JSR     RCVBYTE       ;状態取得(00H=OK)
00237 091D 4D                    TSTA
00238 091E 1026008C              LBNE    ERRC
00239 0922 9DD8                  JSR     READ0
00240 0924 8122                  CMPA    #$22          ;次の文字がダブルコーテーションでなかったらエラー
00241 0926 26D7                  BNE     ERRNAME
00242 0928 4F                    CLRA
00243 0929 BDFE05                JSR     SNDBYTE       ;継続指示
00244 092C BD98F1                JSR     GETSTR        ;文字列取得
00245 092F 3404                  PSHS    B
00246 0931 3502                  PULS    A
00247 0933 4C                    INCA
00248 0934 BDFE05                JSR     SNDBYTE       ;文字列数送信
00249 0937                       
00250 0937              SETL1
00251 0937 A680                  LDA     ,X+           ;文字列送信
00252 0939 BDFE05                JSR     SNDBYTE
00253 093C 5A                    DECB
00254 093D 26F8                  BNE     SETL1
00255 093F 4F                    CLRA
00256 0940 BDFE05                JSR     SNDBYTE
00257 0943                       
00258 0943 BDFE08                JSR     RCVBYTE       ;状態取得(00H=OK)
00259 0946 4D                    TSTA
00260 0947 2665                  BNE     ERRC
00261 0949                       
00262 0949 0FBF                  CLR     <FILENO       ;LOAD FILE SET OK!表示
00263 094B 308D00CE              LEAX    MSG3,PCR
00264 094F BDD90F                JSR     LOUT1
00265 0952 39                    RTS
00266 0953                       
00267                   *「SETS」処理
00268 0953              SETS_PRG
00269 0953 8654                  LDA     #$54
00270 0955 BDFE05                JSR     SNDBYTE       ;Aレジスタのコマンドコードを送信
00271 0958 BDFE08                JSR     RCVBYTE       ;状態取得(00H=OK)
00272 095B 4D                    TSTA
00273 095C 2650                  BNE     ERRC
00274 095E 9DD8                  JSR     READ0
00275 0960 8122                  CMPA    #$22          ;次の文字がダブルコーテーションでなかったらエラー
00276 0962 269B                  BNE     ERRNAME
00277 0964 4F                    CLRA
00278 0965 BDFE05                JSR     SNDBYTE       ;継続指示
00279 0968 BD98F1                JSR     GETSTR        ;文字列取得
00280 096B 3404                  PSHS    B
00281 096D 3502                  PULS    A
00282 096F 4C                    INCA
00283 0970 BDFE05                JSR     SNDBYTE       ;文字列数送信
00284 0973                       
00285 0973              SETS1
00286 0973 A680                  LDA     ,X+           ;文字列送信
00287 0975 BDFE05                JSR     SNDBYTE
00288 0978 5A                    DECB
00289 0979 26F8                  BNE     SETS1
00290 097B 4F                    CLRA
00291 097C BDFE05                JSR     SNDBYTE
00292 097F                       
00293 097F BDFE08                JSR     RCVBYTE       ;状態取得(00H=OK)
00294 0982 4D                    TSTA
00295 0983 2629                  BNE     ERRC
00296 0985                       
00297 0985 0FBF                  CLR     <FILENO       ;SAVE FILE SET OK!表示
00298 0987 308D00A6              LEAX    MSG4,PCR
00299 098B BDD90F                JSR     LOUT1
00300 098E 39                    RTS
00301 098F                       
00302                   *「SDON」処理
00303 098F              SDON_PRG
00304 098F                       
00305                   *BIOS CWRITE CREADフック	;CMTコマンドでBIOSフックをCMTに戻したときにSDへ再度変更する
00306 098F 308D0057              LEAX    BIOSR,PCR
00307 0993 9FDF                  STX     BIOSV+1       ;($DF) <- BIOSフック用ルーチンアドレス
00308 0995                       
00309 0995 0FBF                  CLR     <FILENO       ;SD ON OK!表示
00310 0997 308D00AA              LEAX    MSG5,PCR
00311 099B BDD90F                JSR     LOUT1
00312 099E 39                    RTS
00313 099F                       
00314                   *「CMT」処理
00315 099F              CMT_PRG
00316 099F                       
00317                   *BIOS CWRITE CREADフック	;変更したBIOSフックを元にもどしてCMTを有効にする
00318 099F 8EF17D                LDX     #$F17D
00319 09A2 9FDF                  STX     BIOSV+1       ;($DF) <- BIOS通常処理へ
00320 09A4                       
00321 09A4 0FBF                  CLR     <FILENO       ;CMT ON OK!表示
00322 09A6 308D00A7              LEAX    MSG6,PCR
00323 09AA BDD90F                JSR     LOUT1
00324 09AD 39                    RTS
00325 09AE                       
00326 09AE 0FBF         ERRC     CLR     <FILENO
00327 09B0 81F0                  CMPA    #$F0
00328 09B2 2606                  BNE     ERR1
00329 09B4 308D00CD              LEAX    ERR_F0,PCR
00330 09B8 202C                  BRA     ERRR
00331 09BA 81F1         ERR1     CMPA    #$F1
00332 09BC 2606                  BNE     ERR2
00333 09BE 308D00DC              LEAX    ERR_F1,PCR
00334 09C2 2022                  BRA     ERRR
00335 09C4 81F2         ERR2     CMPA    #$F2
00336 09C6 2606                  BNE     ERR3
00337 09C8 308D00E3              LEAX    ERR_F2,PCR
00338 09CC 2018                  BRA     ERRR
00339 09CE 81F4         ERR3     CMPA    #$F4
00340 09D0 2606                  BNE     ERR4
00341 09D2 308D00EB              LEAX    ERR_F4,PCR
00342 09D6 200E                  BRA     ERRR
00343 09D8 81F5         ERR4     CMPA    #$F5
00344 09DA 2606                  BNE     ERR99
00345 09DC 308D00ED              LEAX    ERR_F5,PCR
00346 09E0 2004                  BRA     ERRR
00347 09E2                       
00348 09E2 308D00FE     ERR99    LEAX    ERR_F99,PCR
00349 09E6                       
00350 09E6 BDD90F       ERRR     JSR     LOUT1
00351 09E9 39                    RTS
00352 09EA                       
00353                   *BIOS CWRITE CREADフック
00354 09EA 347F         BIOSR    PSHS    U,Y,X,DP,D,CC
00355 09EC E684                  LDB     ,X            ;B <- RQNO
00356 09EE C101                  CMPB    #1
00357 09F0 270E                  BEQ     BIOSR1
00358 09F2 C102                  CMPB    #2            ;RQNOが2なら1Byte書出し処理へ
00359 09F4 270D                  BEQ     BIOSR2
00360 09F6 C103                  CMPB    #3            ;RQNOが3なら1Byte読み込み処理へ
00361 09F8 270C                  BEQ     BIOSR3
00362 09FA 357F                  PULS    CC,D,DP,X,Y,U
00363 09FC 6E9FFBFA              JMP     [RETADD]      ;以外なら本来のBIOS処理継続
00364 0A00                       
00365 0A00 7EFE0B       BIOSR1   JMP     MOTOR
00366 0A03 7EFE0E       BIOSR2   JMP     WRITE1BYTE
00367 0A06 7EFE11       BIOSR3   JMP     READ1BYTE
00368 0A09                       
00369 0A09 464D2D375F53 MSG1     FCC     /FM-7_SD READY OK!/ 
      0A0F 442052454144
      0A15 59204F4B21  
00370 0A1A 0D0A00                FCB     $0D,$0A,$00
00371 0A1D                       
00372 0A1D 4C4F41442046 MSG3     FCC     /LOAD FILE SET OK!/ 
      0A23 494C45205345
      0A29 54204F4B21  
00373 0A2E 0D0A00                FCB     $0D,$0A,$00
00374 0A31                       
00375 0A31 534156452046 MSG4     FCC     /SAVE FILE SET OK!/ 
      0A37 494C45205345
      0A3D 54204F4B21  
00376 0A42 0D0A00                FCB     $0D,$0A,$00
00377 0A45                       
00378 0A45 5344204F4E20 MSG5     FCC     /SD ON OK!/   
      0A4B 4F4B21      
00379 0A4E 0D0A00                FCB     $0D,$0A,$00
00380 0A51                       
00381 0A51 434D54204F4E MSG6     FCC     /CMT ON OK!/  
      0A57 204F4B21    
00382 0A5B 0D0A00                FCB     $0D,$0A,$00
00383 0A5E                       
00384 0A5E 53454C454354 MSGKEY   FCC     /SELECT:0-9 NEXT:ANY BACK:B BREAK:ESC/ 
      0A64 3A302D39204E
      0A6A 4558543A414E
      0A70 59204241434B
      0A76 3A4220425245
      0A7C 414B3A455343
00385 0A82 0D0A00                FCB     $0D,$0A,$00
00386 0A85                       
00387 0A85 534420434152 ERR_F0   FCC     /SD CARD INITIATE ERROR/ 
      0A8B 4420494E4954
      0A91 494154452045
      0A97 52524F52    
00388 0A9B 0D0A00                FCB     $0D,$0A,$00
00389 0A9E                       
00390 0A9E 46494C45204E ERR_F1   FCC     /FILE NOT FOUND/ 
      0AA4 4F5420464F55
      0AAA 4E44        
00391 0AAC 0D0A00                FCB     $0D,$0A,$00
00392 0AAF                       
00393 0AAF 46494C45204F ERR_F2   FCC     /FILE OPEN ERROR/ 
      0AB5 50454E204552
      0ABB 524F52      
00394 0ABE 0D0A00                FCB     $0D,$0A,$00
00395 0AC1                       
00396 0AC1 434D44204552 ERR_F4   FCC     /CMD ERROR/   
      0AC7 524F52      
00397 0ACA 0D0A00                FCB     $0D,$0A,$00
00398 0ACD                       
00399 0ACD 4E4F5420444F ERR_F5   FCC     /NOT DOUBLE QUOTATION/ 
      0AD3 55424C452051
      0AD9 554F54415449
      0ADF 4F4E        
00400 0AE1 0D0A00                FCB     $0D,$0A,$00
00401 0AE4                       
00402 0AE4 554E4B4E4F57 ERR_F99  FCC     /UNKNOWN ERROR/ 
      0AEA 4E204552524F
      0AF0 52          
00403 0AF1 0D0A00                FCB     $0D,$0A,$00
00404 0AF4                       
00405                   *新拡張コマンドTBL
00406 0AF4              NEWTBL   RMB     64
00407 0B34 454E                  FCC     /EN/          ;NEWTBL領域の終わり位置を示す
00408 0B36                       
00409 0B36                       END

SYMBOL TABLE

00BF FILENO     00D2 READ1      00D8 READ0      00DE BIOSV      0203 EXTNUM  
0204 EXTTBL     0210 EXTTRN     053F LBUF       92A0 ERRENT     98F1 GETSTR  
C495 AZLCNV     D90F LOUT1      DB54 INPUT1     FBFA RETADD     FE05 SNDBYTE 
FE08 RCVBYTE    FE0B MOTOR      FE0E WRITE1BY   FE11 READ1BYT   0790 START   
07AC COPY       07F8 BIOSF      0808 ERR02      080B NEWTRN     0813 NEWTRN2 
081C NEWTRN3    0825 NEWTRN4    082E NEWTRN5    0837 SDIR_PRG   0853 SDIR1   
0868 SDIR2      0873 SDIR3      0881 DL1        0885 DL2        089B DL3     
08AC DL33       08AE DL4        08B2 DL9        08B6 DL91       08D2 DL5     
08D9 DL6        08E8 DL61       08F3 DL62       08F7 DL7        08F9 DL8     
08FE SDIR99     08FF ERRNAME    090B ERRNM1     0910 ERRNM2     0915 SETL_PRG
0937 SETL1      0953 SETS_PRG   0973 SETS1      098F SDON_PRG   099F CMT_PRG 
09AE ERRC       09BA ERR1       09C4 ERR2       09CE ERR3       09D8 ERR4    
09E2 ERR99      09E6 ERRR       09EA BIOSR      0A00 BIOSR1     0A03 BIOSR2  
0A06 BIOSR3     0A09 MSG1       0A1D MSG3       0A31 MSG4       0A45 MSG5    
0A51 MSG6       0A5E MSGKEY     0A85 ERR_F0     0A9E ERR_F1     0AAF ERR_F2  
0AC1 ERR_F4     0ACD ERR_F5     0AE4 ERR_F99    0AF4 NEWTBL     

Total symbol=79
Total errors=0
