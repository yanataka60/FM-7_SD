00001 083C                       ORG     $083C
00002 083C                       
00003      00BF         FILENO   EQU     $00BF         ;ファイル番号
00004      00D2         READ1    EQU     $00D2         ;汎用読み込みルーチン
00005      00D8         READ0    EQU     $00D8         ;汎用読み込みルーチン、ポインタ移動無し
00006      00DE         BIOSV    EQU     $00DE         ;BIOSジャンプルーチン
00007      01F9         EXTNUM   EQU     $01F9         ;拡張予約語の数
00008      01FA         EXTTBL   EQU     $01FA         ;拡張予約語の綴りテーブルの先頭アドレス
00009      01FC         EXTJMP   EQU     $01FC
00010                   *EXTTRN		EQU		$0201	;Syntax Errorのアドレス
00011      053F         LBUF     EQU     $053F         ;数値->文字列変換における文字列バッファ(ファイル名受信バッファとして使用)
00012      9740         ERRENT   EQU     $9740         ;$92A0 Syntax Errorエントリ
00013      9D86         GETSTR   EQU     $9D86         ;$98F1 文字列実効番地読み出し
00014      C7E0         AZLCNV   EQU     $C7E0         ;$C495 英小文字->大文字変換ルーチン
00015      DB1B         LOUT1    EQU     $DB1B         ;D90F 文字列出力ルーチン
00016      DD53         INPUT1   EQU     $DD53         ;DB54 キーボード1Byte入力ルーチン
00017      FBFA         RETADD   EQU     $FBFA         ;本来のBIOSジャンプルーチンエントリ
00018      FE05         SNDBYTE  EQU     $FE05         ;(BOOTROM)Arduinoへ1Byte送信
00019      FE08         RCVBYTE  EQU     $FE08         ;(BOOTROM)Arduinoから1Byte受信
00020      FE0B         MOTOR    EQU     $FE0B         ;(BOOTROM)BIOS[01]モーター制御
00021      FE0E         WRITE1BYTE EQU   $FE0E         ;(BOOTROM)BIOS[02]SD-CARDへ1Byte書き込み
00022      FE11         READ1BYTE EQU    $FE11         ;(BOOTROM)BIOS[03]SD-CARDから1Byte読み込み
00023                   *
00024 083C              START
00025                   * 拡張コマンドテーブルを#NEWTBLにコピーして拡張コマンド「SDIR」「SETL」「SETS」「SDON」「CMT」を追加
00026                   *		LDB		EXTNUM		;B <- 拡張コマンド数
00027                   *		INC		EXTNUM		;拡張コマンド数+1
00028                   *		INC		EXTNUM		;拡張コマンド数+1
00029                   *		INC		EXTNUM		;拡張コマンド数+1
00030                   *		INC		EXTNUM		;拡張コマンド数+1
00031                   *		INC		EXTNUM		;拡張コマンド数+1
00032 083C 8605                  LDA     #5
00033 083E B701F9                STA     EXTNUM
00034 0841 338D0308              LEAU    NEWTBL,PCR    ;U <- 新拡張コマンドTBLアドレス
00035 0845 FF01FA                STU     EXTTBL        ;拡張コマンドTBLポインタ <- 新拡張コマンドTBLアドレス
00036 0848 338D0013              LEAU    NEWJMP,PCR    ;U <- 新拡張コマンドTBLアドレス
00037 084C FF01FC                STU     EXTJMP        ;拡張コマンドTBLポインタ <- 新拡張コマンドTBLアドレス
00038                   *
00039 084F                       
00040                   *BIOS CWRITE CREADフック
00041 084F 308D01F0     BIOSF    LEAX    BIOSR,PCR
00042 0853 9FDF                  STX     BIOSV+1       ;($DF) <- BIOSフック用ルーチンアドレス
00043 0855                       
00044                   *SD関連書き換え終了メッセージ
00045 0855 0FBF         ST1      CLR     <FILENO       ;($00BF) <- 0 画面出力へ設定
00046 0857 308D0207              LEAX    MSG1,PCR
00047 085B BDDB1B                JSR     LOUT1         ;「FM-8_SD READY OK!」を表示
00048 085E                       
00049 085E 39                    RTS                   ;BASICへ戻る
00050 085F                       
00051                   *追加コマンド判定ルーチン
00052 085F 81EE         NEWJMP   CMPA    #$EE          ;DISK?
00053 0861 2502                  BLO     PRC1
00054 0863 8006                  SUBA    #6
00055 0865 80E8         PRC1     SUBA    #$E8          ;「SDIR」判定
00056 0867 2604                  BNE     NEWTRN2
00057 0869 9DD2                  JSR     READ1         ;入力コマンド解釈ポインタ+1
00058 086B 2023                  BRA     SDIR_PRG
00059 086D 4A           NEWTRN2  DECA                  ;「SETL」判定
00060 086E 2605                  BNE     NEWTRN3
00061 0870 9DD2                  JSR     READ1         ;入力コマンド解釈ポインタ+1
00062 0872 1600F9                LBRA    SETL_PRG
00063 0875 4A           NEWTRN3  DECA                  ;「SETS」判定
00064 0876 2605                  BNE     NEWTRN4
00065 0878 9DD2                  JSR     READ1         ;入力コマンド解釈ポインタ+1
00066 087A 16012F                LBRA    SETS_PRG
00067 087D 4A           NEWTRN4  DECA                  ;「SDON」判定
00068 087E 2605                  BNE     NEWTRN5
00069 0880 9DD2                  JSR     READ1         ;入力コマンド解釈ポインタ+1
00070 0882 160163                LBRA    SDON_PRG
00071 0885 4A           NEWTRN5  DECA                  ;「CMT」判定
00072 0886 2605                  BNE     NEWTRN6
00073 0888 9DD2                  JSR     READ1         ;入力コマンド解釈ポインタ+1
00074 088A 16016B                LBRA    CMT_PRG
00075 088D 7E9740       NEWTRN6  JMP     ERRENT
00076 0890                       
00077                   *「SDIR」処理
00078 0890              SDIR_PRG
00079 0890 8652                  LDA     #$52
00080 0892 BDFE05                JSR     SNDBYTE       ;Aレジスタのコマンドコードを送信
00081 0895 BDFE08                JSR     RCVBYTE       ;状態取得(00H=OK)
00082 0898 4D                    TSTA
00083 0899 1026016A              LBNE    ERRC
00084 089D                       
00085 089D 9DD8                  JSR     READ0         ;SDIRの次に文字列があるか?
00086 089F 260B                  BNE     SDIR1         ;あればSDIR1へ
00087 08A1 4F                    CLRA
00088 08A2 BDFE05                JSR     SNDBYTE       ;継続指示
00089 08A5 8601                  LDA     #$01
00090 08A7 BDFE05                JSR     SNDBYTE       ;なければ送信文字列数1文字として終了コード送信へ
00091 08AA 2020                  BRA     SDIR3
00092 08AC 8122         SDIR1    CMPA    #$22          ;次の文字がダブルコーテーションでなかったらエラー
00093 08AE 102600A6              LBNE    ERRNAME
00094 08B2 4F                    CLRA
00095 08B3 BDFE05                JSR     SNDBYTE       ;継続指示
00096 08B6 BD9D86                JSR     GETSTR        ;文字列取得
00097 08B9 3404                  PSHS    B
00098 08BB 3502                  PULS    A
00099 08BD 4C                    INCA
00100 08BE BDFE05                JSR     SNDBYTE       ;文字列数を送信
00101 08C1 A680         SDIR2    LDA     ,X+
00102 08C3 BDC7E0                JSR     AZLCNV        ;文字列を1文字取得して大文字に変換
00103 08C6 BDFE05                JSR     SNDBYTE       ;送信
00104 08C9 5A                    DECB
00105 08CA 26F5                  BNE     SDIR2
00106 08CC                       
00107 08CC 4F           SDIR3    CLRA
00108 08CD BDFE05                JSR     SNDBYTE       ;文字列送信終了コード送信
00109 08D0                       
00110 08D0 BDFE08                JSR     RCVBYTE       ;状態取得(00H=OK)
00111 08D3 4D                    TSTA
00112 08D4 1026012F              LBNE    ERRC          ;エラー処理へ
00113 08D8                       
00114 08D8 0FBF                  CLR     <FILENO
00115 08DA 108E053F     DL1      LDY     #LBUF         ;Arduinoから送られてくる文字列を#LBUFへ格納
00116 08DE BDFE08       DL2      JSR     RCVBYTE
00117 08E1 4D                    TSTA
00118 08E2 2710                  BEQ     DL3           ;$00を受信するまでを一行とする
00119 08E4 81FF                  CMPA    #$FF
00120 08E6 271F                  BEQ     DL4           ;$FFを受信したら終了
00121 08E8 81FD                  CMPA    #$FD
00122 08EA 271F                  BEQ     DL9           ;$FD受信で文字列を取得してSETLしたことを表示
00123 08EC 81FE                  CMPA    #$FE
00124 08EE 273B                  BEQ     DL5           ;$FEを受信したら一時停止して一文字入力待ち
00125 08F0 A7A0                  STA     ,Y+
00126 08F2 20EA                  BRA     DL2
00127 08F4                       
00128 08F4              DL3
00129 08F4 860D                  LDA     #$0D          ;$00を受信したら一行分を表示して改行
00130 08F6 A7A0                  STA     ,Y+
00131 08F8 860A                  LDA     #$0A
00132 08FA A7A0                  STA     ,Y+
00133 08FC                       
00134 08FC 4F                    CLRA
00135 08FD A7A0                  STA     ,Y+
00136 08FF 8E053F                LDX     #LBUF
00137 0902 BDDB1B                JSR     LOUT1
00138 0905 20D3         DL33     BRA     DL1
00139 0907                       
00140 0907 BDFE08       DL4      JSR     RCVBYTE       ;状態取得(00H=OK)して終了
00141 090A 39                    RTS
00142 090B                       
00143 090B 108E053F     DL9      LDY     #LBUF         ;文字列を取得してSETLしたことを表示
00144 090F BDFE08       DL91     JSR     RCVBYTE       ;#LBUFへ文字列格納
00145 0912 A7A0                  STA     ,Y+
00146 0914 4D                    TSTA                  ;$00を受信するまで受信処理
00147 0915 26F8                  BNE     DL91
00148 0917 8E053F                LDX     #LBUF
00149 091A BDDB1B                JSR     LOUT1
00150 091D 308D0155              LEAX    MSG3,PCR
00151 0921 BDDB1B                JSR     LOUT1         ;SETLしたことを表示
00152 0924 BDFE08                JSR     RCVBYTE       ;状態取得読み飛ばし
00153 0927 BDFE08                JSR     RCVBYTE       ;状態取得読み飛ばし
00154 092A 39                    RTS
00155 092B                       
00156 092B 308D0188     DL5      LEAX    MSGKEY,PCR    ;一時停止して一文字入力待ち
00157 092F BDDB1B                JSR     LOUT1         ;HIT ANT KEY表示
00158 0932 BDDD53       DL6      JSR     INPUT1
00159 0935 811B                  CMPA    #$1B
00160 0937 2717                  BEQ     DL7           ;ESCで打ち切り
00161 0939 8130                  CMPA    #$30          ;数字0～9ならそのままArduinoへ送信してSETL処理へ
00162 093B 2504                  BLO     DL61
00163 093D 813A                  CMPA    #$3A
00164 093F 2511                  BLO     DL8           
00165 0941 8142         DL61     CMPA    #$42
00166 0943 270D                  BEQ     DL8           ;「B」で前ページ
00167 0945 8162                  CMPA    #$62
00168 0947 2703                  BEQ     DL62          ;「b」で前ページ
00169 0949 4F                    CLRA
00170 094A 2006                  BRA     DL8           ;それ以外で継続
00171 094C 8642         DL62     LDA     #$42          ;b->B
00172 094E 2002                  BRA     DL8
00173 0950 86FF         DL7      LDA     #$FF
00174 0952 BDFE05       DL8      JSR     SNDBYTE
00175 0955 2087                  BRA     DL2
00176 0957                       
00177 0957 39           SDIR99   RTS
00178 0958                       
00179 0958 3402         ERRNAME  PSHS    A
00180 095A 86FF                  LDA     #$FF
00181 095C BDFE05                JSR     SNDBYTE       ;打ち切り指示
00182 095F 3502                  PULS    A
00183 0961 4D                    TSTA                  ;$00ならポインタを進めない SETL SETSのみはERROR
00184 0962 2705                  BEQ     ERRNM2
00185 0964 9DD2         ERRNM1   JSR     READ1         ;入力コマンド解釈ポインタ+1
00186 0966 4D                    TSTA
00187 0967 26FB                  BNE     ERRNM1
00188 0969 86F5         ERRNM2   LDA     #$F5          ;NOT DOUBLE QUOTATION表示
00189 096B 160099                LBRA    ERRC
00190 096E                       
00191                   *「SETL」処理
00192 096E              SETL_PRG
00193 096E 8653                  LDA     #$53
00194 0970 BDFE05                JSR     SNDBYTE       ;Aレジスタのコマンドコードを送信
00195 0973 BDFE08                JSR     RCVBYTE       ;状態取得(00H=OK)
00196 0976 4D                    TSTA
00197 0977 1026008C              LBNE    ERRC
00198 097B 9DD8                  JSR     READ0
00199 097D 8122                  CMPA    #$22          ;次の文字がダブルコーテーションでなかったらエラー
00200 097F 26D7                  BNE     ERRNAME
00201 0981 4F                    CLRA
00202 0982 BDFE05                JSR     SNDBYTE       ;継続指示
00203 0985 BD9D86                JSR     GETSTR        ;文字列取得
00204 0988 3404                  PSHS    B
00205 098A 3502                  PULS    A
00206 098C 4C                    INCA
00207 098D BDFE05                JSR     SNDBYTE       ;文字列数送信
00208 0990                       
00209 0990              SETL1
00210 0990 A680                  LDA     ,X+           ;文字列送信
00211 0992 BDFE05                JSR     SNDBYTE
00212 0995 5A                    DECB
00213 0996 26F8                  BNE     SETL1
00214 0998 4F                    CLRA
00215 0999 BDFE05                JSR     SNDBYTE
00216 099C                       
00217 099C BDFE08                JSR     RCVBYTE       ;状態取得(00H=OK)
00218 099F 4D                    TSTA
00219 09A0 2665                  BNE     ERRC
00220 09A2                       
00221 09A2 0FBF                  CLR     <FILENO       ;LOAD FILE SET OK!表示
00222 09A4 308D00CE              LEAX    MSG3,PCR
00223 09A8 BDDB1B                JSR     LOUT1
00224 09AB 39                    RTS
00225 09AC                       
00226                   *「SETS」処理
00227 09AC              SETS_PRG
00228 09AC 8654                  LDA     #$54
00229 09AE BDFE05                JSR     SNDBYTE       ;Aレジスタのコマンドコードを送信
00230 09B1 BDFE08                JSR     RCVBYTE       ;状態取得(00H=OK)
00231 09B4 4D                    TSTA
00232 09B5 2650                  BNE     ERRC
00233 09B7 9DD8                  JSR     READ0
00234 09B9 8122                  CMPA    #$22          ;次の文字がダブルコーテーションでなかったらエラー
00235 09BB 269B                  BNE     ERRNAME
00236 09BD 4F                    CLRA
00237 09BE BDFE05                JSR     SNDBYTE       ;継続指示
00238 09C1 BD9D86                JSR     GETSTR        ;文字列取得
00239 09C4 3404                  PSHS    B
00240 09C6 3502                  PULS    A
00241 09C8 4C                    INCA
00242 09C9 BDFE05                JSR     SNDBYTE       ;文字列数送信
00243 09CC                       
00244 09CC              SETS1
00245 09CC A680                  LDA     ,X+           ;文字列送信
00246 09CE BDFE05                JSR     SNDBYTE
00247 09D1 5A                    DECB
00248 09D2 26F8                  BNE     SETS1
00249 09D4 4F                    CLRA
00250 09D5 BDFE05                JSR     SNDBYTE
00251 09D8                       
00252 09D8 BDFE08                JSR     RCVBYTE       ;状態取得(00H=OK)
00253 09DB 4D                    TSTA
00254 09DC 2629                  BNE     ERRC
00255 09DE                       
00256 09DE 0FBF                  CLR     <FILENO       ;SAVE FILE SET OK!表示
00257 09E0 308D00A6              LEAX    MSG4,PCR
00258 09E4 BDDB1B                JSR     LOUT1
00259 09E7 39                    RTS
00260 09E8                       
00261                   *「SDON」処理
00262 09E8              SDON_PRG
00263 09E8                       
00264                   *BIOS CWRITE CREADフック	;CMTコマンドでBIOSフックをCMTに戻したときにSDへ再度変更する
00265 09E8 308D0057              LEAX    BIOSR,PCR
00266 09EC 9FDF                  STX     BIOSV+1       ;($DF) <- BIOSフック用ルーチンアドレス
00267 09EE                       
00268 09EE 0FBF                  CLR     <FILENO       ;SD ON OK!表示
00269 09F0 308D00AA              LEAX    MSG5,PCR
00270 09F4 BDDB1B                JSR     LOUT1
00271 09F7 39                    RTS
00272 09F8                       
00273                   *「CMT」処理
00274 09F8              CMT_PRG
00275 09F8                       
00276                   *BIOS CWRITE CREADフック	;変更したBIOSフックを元にもどしてCMTを有効にする
00277 09F8 8EF2D8                LDX     #$F2D8
00278 09FB 9FDF                  STX     BIOSV+1       ;($DF) <- BIOS通常処理へ
00279 09FD                       
00280 09FD 0FBF                  CLR     <FILENO       ;CMT ON OK!表示
00281 09FF 308D00A7              LEAX    MSG6,PCR
00282 0A03 BDDB1B                JSR     LOUT1
00283 0A06 39                    RTS
00284 0A07                       
00285 0A07 0FBF         ERRC     CLR     <FILENO
00286 0A09 81F0                  CMPA    #$F0
00287 0A0B 2606                  BNE     ERR1
00288 0A0D 308D00CD              LEAX    ERR_F0,PCR
00289 0A11 202C                  BRA     ERRR
00290 0A13 81F1         ERR1     CMPA    #$F1
00291 0A15 2606                  BNE     ERR2
00292 0A17 308D00DC              LEAX    ERR_F1,PCR
00293 0A1B 2022                  BRA     ERRR
00294 0A1D 81F2         ERR2     CMPA    #$F2
00295 0A1F 2606                  BNE     ERR3
00296 0A21 308D00E3              LEAX    ERR_F2,PCR
00297 0A25 2018                  BRA     ERRR
00298 0A27 81F4         ERR3     CMPA    #$F4
00299 0A29 2606                  BNE     ERR4
00300 0A2B 308D00EB              LEAX    ERR_F4,PCR
00301 0A2F 200E                  BRA     ERRR
00302 0A31 81F5         ERR4     CMPA    #$F5
00303 0A33 2606                  BNE     ERR99
00304 0A35 308D00ED              LEAX    ERR_F5,PCR
00305 0A39 2004                  BRA     ERRR
00306 0A3B                       
00307 0A3B 308D00FE     ERR99    LEAX    ERR_F99,PCR
00308 0A3F                       
00309 0A3F BDDB1B       ERRR     JSR     LOUT1
00310 0A42 39                    RTS
00311 0A43                       
00312                   *BIOS CWRITE CREADフック
00313 0A43 347F         BIOSR    PSHS    U,Y,X,DP,D,CC
00314 0A45 E684                  LDB     ,X            ;B <- RQNO
00315 0A47 C101                  CMPB    #1
00316 0A49 270E                  BEQ     BIOSR1
00317 0A4B C102                  CMPB    #2            ;RQNOが2なら1Byte書出し処理へ
00318 0A4D 270D                  BEQ     BIOSR2
00319 0A4F C103                  CMPB    #3            ;RQNOが3なら1Byte読み込み処理へ
00320 0A51 270C                  BEQ     BIOSR3
00321 0A53 357F                  PULS    CC,D,DP,X,Y,U
00322 0A55 6E9FFBFA              JMP     [RETADD]      ;以外なら本来のBIOS処理継続
00323 0A59                       
00324 0A59 7EFE0B       BIOSR1   JMP     MOTOR
00325 0A5C 7EFE0E       BIOSR2   JMP     WRITE1BYTE
00326 0A5F 7EFE11       BIOSR3   JMP     READ1BYTE
00327 0A62                       
00328 0A62 464D2D385F53 MSG1     FCC     /FM-8_SD READY OK!/ 
      0A68 442052454144
      0A6E 59204F4B21  
00329 0A73 0D0A00                FCB     $0D,$0A,$00
00330 0A76                       
00331 0A76 4C4F41442046 MSG3     FCC     /LOAD FILE SET OK!/ 
      0A7C 494C45205345
      0A82 54204F4B21  
00332 0A87 0D0A00                FCB     $0D,$0A,$00
00333 0A8A                       
00334 0A8A 534156452046 MSG4     FCC     /SAVE FILE SET OK!/ 
      0A90 494C45205345
      0A96 54204F4B21  
00335 0A9B 0D0A00                FCB     $0D,$0A,$00
00336 0A9E                       
00337 0A9E 5344204F4E20 MSG5     FCC     /SD ON OK!/   
      0AA4 4F4B21      
00338 0AA7 0D0A00                FCB     $0D,$0A,$00
00339 0AAA                       
00340 0AAA 434D54204F4E MSG6     FCC     /CMT ON OK!/  
      0AB0 204F4B21    
00341 0AB4 0D0A00                FCB     $0D,$0A,$00
00342 0AB7                       
00343 0AB7 53454C454354 MSGKEY   FCC     /SELECT:0-9 NEXT:ANY BACK:B BREAK:ESC/ 
      0ABD 3A302D39204E
      0AC3 4558543A414E
      0AC9 59204241434B
      0ACF 3A4220425245
      0AD5 414B3A455343
00344 0ADB 0D0A00                FCB     $0D,$0A,$00
00345 0ADE                       
00346 0ADE 534420434152 ERR_F0   FCC     /SD CARD INITIATE ERROR/ 
      0AE4 4420494E4954
      0AEA 494154452045
      0AF0 52524F52    
00347 0AF4 0D0A00                FCB     $0D,$0A,$00
00348 0AF7                       
00349 0AF7 46494C45204E ERR_F1   FCC     /FILE NOT FOUND/ 
      0AFD 4F5420464F55
      0B03 4E44        
00350 0B05 0D0A00                FCB     $0D,$0A,$00
00351 0B08                       
00352 0B08 46494C45204F ERR_F2   FCC     /FILE OPEN ERROR/ 
      0B0E 50454E204552
      0B14 524F52      
00353 0B17 0D0A00                FCB     $0D,$0A,$00
00354 0B1A                       
00355 0B1A 434D44204552 ERR_F4   FCC     /CMD ERROR/   
      0B20 524F52      
00356 0B23 0D0A00                FCB     $0D,$0A,$00
00357 0B26                       
00358 0B26 4E4F5420444F ERR_F5   FCC     /NOT DOUBLE QUOTATION/ 
      0B2C 55424C452051
      0B32 554F54415449
      0B38 4F4E        
00359 0B3A 0D0A00                FCB     $0D,$0A,$00
00360 0B3D                       
00361 0B3D 554E4B4E4F57 ERR_F99  FCC     /UNKNOWN ERROR/ 
      0B43 4E204552524F
      0B49 52          
00362 0B4A 0D0A00                FCB     $0D,$0A,$00
00363 0B4D                       
00364                   *新拡張コマンドTBL
00365 0B4D 534449       NEWTBL   FCC     /SDI/         
00366 0B50 D2                    FCB     'R+$80
00367 0B51 534554                FCC     /SET/         
00368 0B54 CC                    FCB     'L+$80
00369 0B55 534554                FCC     /SET/         
00370 0B58 D3                    FCB     'S+$80
00371 0B59 53444F                FCC     /SDO/         
00372 0B5C CE                    FCB     'N+$80
00373 0B5D 434D                  FCC     /CM/          
00374 0B5F D4                    FCB     'T+$80
00375 0B60 454E                  FCC     /EN/          ;NEWTBL領域の終わり位置を示す
00376 0B62                       
00377 0B62                       END

SYMBOL TABLE

00BF FILENO     00D2 READ1      00D8 READ0      00DE BIOSV      01F9 EXTNUM  
01FA EXTTBL     01FC EXTJMP     053F LBUF       9740 ERRENT     9D86 GETSTR  
C7E0 AZLCNV     DB1B LOUT1      DD53 INPUT1     FBFA RETADD     FE05 SNDBYTE 
FE08 RCVBYTE    FE0B MOTOR      FE0E WRITE1BY   FE11 READ1BYT   083C START   
084F BIOSF      0855 ST1        085F NEWJMP     0865 PRC1       086D NEWTRN2 
0875 NEWTRN3    087D NEWTRN4    0885 NEWTRN5    088D NEWTRN6    0890 SDIR_PRG
08AC SDIR1      08C1 SDIR2      08CC SDIR3      08DA DL1        08DE DL2     
08F4 DL3        0905 DL33       0907 DL4        090B DL9        090F DL91    
092B DL5        0932 DL6        0941 DL61       094C DL62       0950 DL7     
0952 DL8        0957 SDIR99     0958 ERRNAME    0964 ERRNM1     0969 ERRNM2  
096E SETL_PRG   0990 SETL1      09AC SETS_PRG   09CC SETS1      09E8 SDON_PRG
09F8 CMT_PRG    0A07 ERRC       0A13 ERR1       0A1D ERR2       0A27 ERR3    
0A31 ERR4       0A3B ERR99      0A3F ERRR       0A43 BIOSR      0A59 BIOSR1  
0A5C BIOSR2     0A5F BIOSR3     0A62 MSG1       0A76 MSG3       0A8A MSG4    
0A9E MSG5       0AAA MSG6       0AB7 MSGKEY     0ADE ERR_F0     0AF7 ERR_F1  
0B08 ERR_F2     0B1A ERR_F4     0B26 ERR_F5     0B3D ERR_F99    0B4D NEWTBL  


Total symbol=80
Total errors=0
