00001                   ;2023.2.11 リロケータブルに修正
00002                   ;2023.2.12 リロケータブル修正直し切れていなかった
00003                   ;
00004 0790                       ORG     $0790
00005 0790                       
00006      00BF         FILENO   EQU     $00BF         ;ファイル番号
00007      00D2         READ1    EQU     $00D2         ;汎用読み込みルーチン
00008      00D8         READ0    EQU     $00D8         ;汎用読み込みルーチン、ポインタ移動無し
00009      00DE         BIOSV    EQU     $00DE         ;BIOSジャンプルーチン
00010      0203         EXTNUM   EQU     $0203         ;拡張予約語の数
00011      0204         EXTTBL   EQU     $0204         ;拡張予約語の綴りテーブルの先頭アドレス
00012      0210         EXTTRN   EQU     $0210         ;Syntax Errorのアドレス
00013      053F         LBUF     EQU     $053F         ;数値->文字列変換における文字列バッファ(ファイル名受信バッファとして使用)
00014      92A0         ERRENT   EQU     $92A0         ;Syntax Errorエントリ
00015      98F1         GETSTR   EQU     $98F1         ;文字列実効番地読み出し
00016      C495         AZLCNV   EQU     $C495         ;英小文字->大文字変換ルーチン
00017      D90F         LOUT1    EQU     $D90F         ;文字列出力ルーチン
00018      DB54         INPUT1   EQU     $DB54         ;キーボード1Byte入力ルーチン
00019      FBFA         RETADD   EQU     $FBFA         ;本来のBIOSジャンプルーチンエントリ
00020      FE05         SNDBYTE  EQU     $FE05         ;(BOOTROM)Arduinoへ1Byte送信
00021      FE08         RCVBYTE  EQU     $FE08         ;(BOOTROM)Arduinoから1Byte受信
00022      FE0B         MOTOR    EQU     $FE0B         ;(BOOTROM)BIOS[01]モーター制御
00023      FE0E         WRITE1BYTE EQU   $FE0E         ;(BOOTROM)BIOS[02]SD-CARDへ1Byte書き込み
00024      FE11         READ1BYTE EQU    $FE11         ;(BOOTROM)BIOS[03]SD-CARDから1Byte読み込み
00025                   *
00026 0790              START    
00027                   * 拡張コマンドテーブルを#NEWTBLにコピーして拡張コマンド「SDIR」を追加
00028 0790 F60203                LDB     EXTNUM        ;B <- 拡張コマンド数
00029 0793 7C0203                INC     EXTNUM        ;拡張コマンド数+1
00030 0796 7C0203                INC     EXTNUM        ;拡張コマンド数+1
00031 0799 BE0204                LDX     EXTTBL        ;X <- 旧拡張コマンドTBLアドレス
00032 079C 338D023A              LEAU    NEWTBL,PCR    ;U <- 新拡張コマンドTBLアドレス
00033 07A0 FF0204                STU     EXTTBL        ;拡張コマンドTBLポインタ <- 新拡張コマンドTBLアドレス
00034                   *
00035 07A3 A680         COPY     LDA     ,X+           ;拡張コマンドTBLをコピー
00036 07A5 A7C0                  STA     ,U+
00037 07A7 2AFA                  BPL     COPY          ;BIT7が1になるまでループ
00038 07A9 5A                    DECB                  ;カウンタ-1
00039 07AA 26F7                  BNE     COPY          ;カウンタが0になるまでループ
00040                   *
00041 07AC 8653                  LDA     #'S           ;「SDIR」コマンドを追加
00042 07AE C644                  LDB     #'D
00043 07B0 EDC1                  STD     ,U++
00044 07B2 8649                  LDA     #'I
00045 07B4 C6D2                  LDB     #'R+$80
00046 07B6 EDC1                  STD     ,U++
00047                   *
00048 07B8 8653                  LDA     #'S           ;「SETS」コマンドを追加
00049 07BA C645                  LDB     #'E
00050 07BC EDC1                  STD     ,U++
00051 07BE 8654                  LDA     #'T
00052 07C0 C6D3                  LDB     #'S+$80
00053 07C2 EDC1                  STD     ,U++
00054 07C4                       
00055 07C4 308D0015              LEAX    NEWTRN,PCR    ;追加コマンド判定ルーチンアドレス
00056 07C8 BF0210                STX     EXTTRN        ;拡張コマンド判定後のジャンプ先アドレスポインタを追加コマンド判定ルーチンアドレスに書き換え
00057 07CB                       
00058                   *BIOS CWRITE CREADフック
00059 07CB 308D0174     BIOSF    LEAX    BIOSR,PCR
00060 07CF 9FDF                  STX     BIOSV+1       ;($DF) <- BIOSフック用ルーチンアドレス
00061 07D1                       
00062                   *SD関連書き換え終了メッセージ
00063 07D1 0FBF                  CLR     <FILENO       ;($00BF) <- 0 画面出力へ設定
00064 07D3 308D018B              LEAX    MSG1,PCR
00065 07D7 7ED90F                JMP     LOUT1         ;「FM-7_SD READY OK!」を表示
00066 07DA                       
00067                   *		RTS						;BASICへ戻る
00068 07DA                       
00069                   *
00070 07DA 7E92A0       ERR02    JMP     ERRENT
00071 07DD                       
00072                   *追加コマンド判定ルーチン
00073 07DD 81F4         NEWTRN   CMPA    #$F4          ;「SDIR」判定
00074 07DF 2604                  BNE     NEWTRN2
00075 07E1 9DD2                  JSR     READ1         ;入力コマンド解釈ポインタ+1
00076 07E3 2009                  BRA     SDIR_PRG
00077 07E5 81F5         NEWTRN2  CMPA    #$F5          ;「SETS」判定
00078 07E7 26F1                  BNE     ERR02         ;どれでもなければエラー
00079 07E9 9DD2                  JSR     READ1         ;入力コマンド解釈ポインタ+1
00080 07EB 1600DE                LBRA    SETS_PRG
00081 07EE                       
00082                   *
00083                   *「SDIR」処理
00084 07EE              SDIR_PRG
00085 07EE 8652                  LDA     #$52
00086 07F0 BDFE05                JSR     SNDBYTE       ;Aレジスタのコマンドコードを送信
00087 07F3 BDFE08                JSR     RCVBYTE       ;状態取得(00H=OK)
00088 07F6 4D                    TSTA
00089 07F7 1026010D              LBNE    ERRC
00090 07FB                       
00091 07FB 9DD8                  JSR     READ0         ;SDIRの次に文字列があるか?
00092 07FD 260B                  BNE     SDIR1         ;あればSDIR1へ
00093 07FF 4F                    CLRA
00094 0800 BDFE05                JSR     SNDBYTE       ;継続指示
00095 0803 8601                  LDA     #$01
00096 0805 BDFE05                JSR     SNDBYTE       ;なければ送信文字列数1文字として終了コード送信へ
00097 0808 2020                  BRA     SDIR3
00098 080A 8122         SDIR1    CMPA    #$22          ;次の文字がダブルコーテーションでなかったらエラー
00099 080C 102600A6              LBNE    ERRNAME
00100 0810 4F                    CLRA
00101 0811 BDFE05                JSR     SNDBYTE       ;継続指示
00102 0814 BD98F1                JSR     GETSTR        ;文字列取得
00103 0817 3404                  PSHS    B
00104 0819 3502                  PULS    A
00105 081B 4C                    INCA
00106 081C BDFE05                JSR     SNDBYTE       ;文字列数を送信
00107 081F A680         SDIR2    LDA     ,X+
00108 0821 BDC495                JSR     AZLCNV        ;文字列を1文字取得して大文字に変換
00109 0824 BDFE05                JSR     SNDBYTE       ;送信
00110 0827 5A                    DECB
00111 0828 26F5                  BNE     SDIR2
00112 082A                       
00113 082A 4F           SDIR3    CLRA
00114 082B BDFE05                JSR     SNDBYTE       ;文字列送信終了コード送信
00115 082E                       
00116 082E BDFE08                JSR     RCVBYTE       ;状態取得(00H=OK)
00117 0831 4D                    TSTA
00118 0832 102600D2              LBNE    ERRC          ;エラー処理へ
00119 0836                       
00120 0836 0FBF                  CLR     <FILENO
00121 0838 108E053F     DL1      LDY     #LBUF         ;Arduinoから送られてくる文字列を#LBUFへ格納
00122 083C BDFE08       DL2      JSR     RCVBYTE
00123 083F 4D                    TSTA
00124 0840 2710                  BEQ     DL3           ;$00を受信するまでを一行とする
00125 0842 81FF                  CMPA    #$FF
00126 0844 271F                  BEQ     DL4           ;$FFを受信したら終了
00127 0846 81FD                  CMPA    #$FD
00128 0848 271F                  BEQ     DL9           ;$FD受信で文字列を取得してSETLしたことを表示
00129 084A 81FE                  CMPA    #$FE
00130 084C 273B                  BEQ     DL5           ;$FEを受信したら一時停止して一文字入力待ち
00131 084E A7A0                  STA     ,Y+
00132 0850 20EA                  BRA     DL2
00133 0852                       
00134 0852              DL3
00135 0852 860D                  LDA     #$0D          ;$00を受信したら一行分を表示して改行
00136 0854 A7A0                  STA     ,Y+
00137 0856 860A                  LDA     #$0A
00138 0858 A7A0                  STA     ,Y+
00139 085A                       
00140 085A 4F                    CLRA
00141 085B A7A0                  STA     ,Y+
00142 085D 8E053F                LDX     #LBUF
00143 0860 BDD90F                JSR     LOUT1
00144 0863 20D3         DL33     BRA     DL1
00145 0865                       
00146 0865 BDFE08       DL4      JSR     RCVBYTE       ;状態取得(00H=OK)して終了
00147 0868 39                    RTS
00148 0869                       
00149 0869 108E053F     DL9      LDY     #LBUF         ;文字列を取得してSETLしたことを表示
00150 086D BDFE08       DL91     JSR     RCVBYTE       ;#LBUFへ文字列格納
00151 0870 A7A0                  STA     ,Y+
00152 0872 4D                    TSTA                  ;$00を受信するまで受信処理
00153 0873 26F8                  BNE     DL91
00154 0875 8E053F                LDX     #LBUF
00155 0878 BDD90F                JSR     LOUT1
00156 087B 308D00F1              LEAX    MSG3,PCR
00157 087F BDD90F                JSR     LOUT1         ;SETLしたことを表示
00158 0882 BDFE08                JSR     RCVBYTE       ;状態取得読み飛ばし
00159 0885 BDFE08                JSR     RCVBYTE       ;状態取得読み飛ばし
00160 0888 39                    RTS
00161 0889                       
00162 0889 308D0101     DL5      LEAX    MSGKEY,PCR    ;一時停止して一文字入力待ち
00163 088D BDD90F                JSR     LOUT1         ;HIT ANT KEY表示
00164 0890 BDDB54       DL6      JSR     INPUT1
00165 0893 811B                  CMPA    #$1B
00166 0895 2717                  BEQ     DL7           ;ESCで打ち切り
00167 0897 8130                  CMPA    #$30          ;数字0～9ならそのままArduinoへ送信してSETL処理へ
00168 0899 2504                  BLO     DL61
00169 089B 813A                  CMPA    #$3A
00170 089D 2511                  BLO     DL8           
00171 089F 8142         DL61     CMPA    #$42
00172 08A1 270D                  BEQ     DL8           ;「B」で前ページ
00173 08A3 8162                  CMPA    #$62
00174 08A5 2703                  BEQ     DL62          ;「b」で前ページ
00175 08A7 4F                    CLRA
00176 08A8 2006                  BRA     DL8           ;それ以外で継続
00177 08AA 8642         DL62     LDA     #$42          ;b->B
00178 08AC 2002                  BRA     DL8
00179 08AE 86FF         DL7      LDA     #$FF
00180 08B0 BDFE05       DL8      JSR     SNDBYTE
00181 08B3 2087                  BRA     DL2
00182 08B5                       
00183 08B5 39           SDIR99   RTS
00184 08B6                       
00185 08B6 3402         ERRNAME  PSHS    A
00186 08B8 86FF                  LDA     #$FF
00187 08BA BDFE05                JSR     SNDBYTE       ;打ち切り指示
00188 08BD 3502                  PULS    A
00189 08BF 4D                    TSTA                  ;$00ならポインタを進めない SETL SETSのみはERROR
00190 08C0 2705                  BEQ     ERRNM2
00191 08C2 9DD2         ERRNM1   JSR     READ1         ;入力コマンド解釈ポインタ+1
00192 08C4 4D                    TSTA
00193 08C5 26FB                  BNE     ERRNM1
00194 08C7 86F5         ERRNM2   LDA     #$F5          ;NOT DOUBLE QUOTATION表示
00195 08C9 16003C                LBRA    ERRC
00196 08CC                       
00197                   *「SETS」処理
00198 08CC              SETS_PRG
00199 08CC 8654                  LDA     #$54
00200 08CE BDFE05                JSR     SNDBYTE       ;Aレジスタのコマンドコードを送信
00201 08D1 BDFE08                JSR     RCVBYTE       ;状態取得(00H=OK)
00202 08D4 4D                    TSTA
00203 08D5 2631                  BNE     ERRC
00204 08D7 9DD8                  JSR     READ0
00205 08D9 8122                  CMPA    #$22          ;次の文字がダブルコーテーションでなかったらエラー
00206 08DB 26D9                  BNE     ERRNAME
00207 08DD 4F                    CLRA
00208 08DE BDFE05                JSR     SNDBYTE       ;継続指示
00209 08E1 BD98F1                JSR     GETSTR        ;文字列取得
00210 08E4 3404                  PSHS    B
00211 08E6 3502                  PULS    A
00212 08E8 4C                    INCA
00213 08E9 BDFE05                JSR     SNDBYTE       ;文字列数送信
00214 08EC                       
00215 08EC              SETS1
00216 08EC A680                  LDA     ,X+           ;文字列送信
00217 08EE BDFE05                JSR     SNDBYTE
00218 08F1 5A                    DECB
00219 08F2 26F8                  BNE     SETS1
00220 08F4 4F                    CLRA
00221 08F5 BDFE05                JSR     SNDBYTE
00222 08F8                       
00223 08F8 BDFE08                JSR     RCVBYTE       ;状態取得(00H=OK)
00224 08FB 4D                    TSTA
00225 08FC 260A                  BNE     ERRC
00226 08FE                       
00227 08FE 0FBF                  CLR     <FILENO       ;SAVE FILE SET OK!表示
00228 0900 308D007B              LEAX    MSG4,PCR
00229 0904 BDD90F                JSR     LOUT1
00230 0907 39                    RTS
00231 0908                       
00232 0908 0FBF         ERRC     CLR     <FILENO
00233 090A 81F0                  CMPA    #$F0
00234 090C 2606                  BNE     ERR1
00235 090E 308D009D              LEAX    ERR_F0,PCR
00236 0912 202C                  BRA     ERRR
00237 0914 81F1         ERR1     CMPA    #$F1
00238 0916 2606                  BNE     ERR2
00239 0918 308D00A0              LEAX    ERR_F1,PCR
00240 091C 2022                  BRA     ERRR
00241 091E 81F2         ERR2     CMPA    #$F2
00242 0920 2606                  BNE     ERR3
00243 0922 308D009C              LEAX    ERR_F2,PCR
00244 0926 2018                  BRA     ERRR
00245 0928 81F4         ERR3     CMPA    #$F4
00246 092A 2606                  BNE     ERR4
00247 092C 308D0098              LEAX    ERR_F4,PCR
00248 0930 200E                  BRA     ERRR
00249 0932 81F5         ERR4     CMPA    #$F5
00250 0934 2606                  BNE     ERR99
00251 0936 308D0094              LEAX    ERR_F5,PCR
00252 093A 2004                  BRA     ERRR
00253 093C                       
00254 093C 308D0094     ERR99    LEAX    ERR_F99,PCR
00255 0940                       
00256 0940 7ED90F       ERRR     JMP     LOUT1
00257                   *		RTS
00258 0943                       
00259                   *BIOS CWRITE CREADフック
00260 0943 347F         BIOSR    PSHS    U,Y,X,DP,D,CC
00261 0945 E684                  LDB     ,X            ;B <- RQNO
00262 0947 C101                  CMPB    #1
00263 0949 270E                  BEQ     BIOSR1
00264 094B C102                  CMPB    #2            ;RQNOが2なら1Byte書出し処理へ
00265 094D 270D                  BEQ     BIOSR2
00266 094F C103                  CMPB    #3            ;RQNOが3なら1Byte読み込み処理へ
00267 0951 270C                  BEQ     BIOSR3
00268 0953 357F                  PULS    CC,D,DP,X,Y,U
00269 0955 6E9FFBFA              JMP     [RETADD]      ;以外なら本来のBIOS処理継続
00270 0959                       
00271 0959 7EFE0B       BIOSR1   JMP     MOTOR
00272 095C 7EFE0E       BIOSR2   JMP     WRITE1BYTE
00273 095F 7EFE11       BIOSR3   JMP     READ1BYTE
00274 0962                       
00275 0962 464D2D375F53 MSG1     FCC     /FM-7_SD OK!/ 
      0968 44204F4B21  
00276 096D 0D0A00                FCB     $0D,$0A,$00
00277 0970                       
00278 0970 4C4F41442053 MSG3     FCC     /LOAD SET OK!/ 
      0976 4554204F4B21
00279 097C 0D0A00                FCB     $0D,$0A,$00
00280 097F                       
00281 097F 534156452053 MSG4     FCC     /SAVE SET OK!/ 
      0985 4554204F4B21
00282 098B 0D0A00                FCB     $0D,$0A,$00
00283 098E                       
00284 098E 53454C3A302D MSGKEY   FCC     /SEL:0-9 NXT:ANY BACK:B BRK:ESC/ 
      0994 39204E58543A
      099A 414E59204241
      09A0 434B3A422042
      09A6 524B3A455343
00285 09AC 0D0A00                FCB     $0D,$0A,$00
00286 09AF                       
00287 09AF 534420494E49 ERR_F0   FCC     /SD INI ERR/  
      09B5 20455252    
00288 09B9 0D0A00                FCB     $0D,$0A,$00
00289 09BC                       
00290 09BC 455252       ERR_F1   FCC     /ERR/         
00291 09BF 0D0A00                FCB     $0D,$0A,$00
00292 09C2                       
00293 09C2 455252       ERR_F2   FCC     /ERR/         
00294 09C5 0D0A00                FCB     $0D,$0A,$00
00295 09C8                       
00296 09C8 455252       ERR_F4   FCC     /ERR/         
00297 09CB 0D0A00                FCB     $0D,$0A,$00
00298 09CE                       
00299 09CE 455252       ERR_F5   FCC     /ERR/         
00300 09D1 0D0A00                FCB     $0D,$0A,$00
00301 09D4                       
00302 09D4 455252       ERR_F99  FCC     /ERR/         
00303 09D7 0D0A00                FCB     $0D,$0A,$00
00304 09DA                       
00305                   *新拡張コマンドTBL
00306 09DA              NEWTBL   RMB     40
00307 0A02 454E                  FCC     /EN/          ;NEWTBL領域の終わり位置を示す
00308 0A04                       
00309 0A04                       END

SYMBOL TABLE

00BF FILENO     00D2 READ1      00D8 READ0      00DE BIOSV      0203 EXTNUM  
0204 EXTTBL     0210 EXTTRN     053F LBUF       92A0 ERRENT     98F1 GETSTR  
C495 AZLCNV     D90F LOUT1      DB54 INPUT1     FBFA RETADD     FE05 SNDBYTE 
FE08 RCVBYTE    FE0B MOTOR      FE0E WRITE1BY   FE11 READ1BYT   0790 START   
07A3 COPY       07CB BIOSF      07DA ERR02      07DD NEWTRN     07E5 NEWTRN2 
07EE SDIR_PRG   080A SDIR1      081F SDIR2      082A SDIR3      0838 DL1     
083C DL2        0852 DL3        0863 DL33       0865 DL4        0869 DL9     
086D DL91       0889 DL5        0890 DL6        089F DL61       08AA DL62    
08AE DL7        08B0 DL8        08B5 SDIR99     08B6 ERRNAME    08C2 ERRNM1  
08C7 ERRNM2     08CC SETS_PRG   08EC SETS1      0908 ERRC       0914 ERR1    
091E ERR2       0928 ERR3       0932 ERR4       093C ERR99      0940 ERRR    
0943 BIOSR      0959 BIOSR1     095C BIOSR2     095F BIOSR3     0962 MSG1    
0970 MSG3       097F MSG4       098E MSGKEY     09AF ERR_F0     09BC ERR_F1  
09C2 ERR_F2     09C8 ERR_F4     09CE ERR_F5     09D4 ERR_F99    09DA NEWTBL  


Total symbol=70
Total errors=0
