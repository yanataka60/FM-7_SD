00001 083C                       ORG     $083C
00002 083C                       
00003      00BF         FILENO   EQU     $00BF         ;ファイル番号
00004      00D2         READ1    EQU     $00D2         ;汎用読み込みルーチン
00005      00D8         READ0    EQU     $00D8         ;汎用読み込みルーチン、ポインタ移動無し
00006      00DE         BIOSV    EQU     $00DE         ;BIOSジャンプルーチン
00007      01F9         EXTNUM   EQU     $01F9         ;拡張予約語の数
00008      01FA         EXTTBL   EQU     $01FA         ;拡張予約語の綴りテーブルの先頭アドレス
00009      01FC         EXTJMP   EQU     $01FC
00010                   *EXTTRN		EQU		$0201	;Syntax Errorのアドレス
00011      053F         LBUF     EQU     $053F         ;数値->文字列変換における文字列バッファ(ファイル名受信バッファとして使用)
00012      9740         ERRENT   EQU     $9740         ;$92A0 Syntax Errorエントリ
00013      9D86         GETSTR   EQU     $9D86         ;$98F1 文字列実効番地読み出し
00014      C7E0         AZLCNV   EQU     $C7E0         ;$C495 英小文字->大文字変換ルーチン
00015      DB1B         LOUT1    EQU     $DB1B         ;D90F 文字列出力ルーチン
00016      DD53         INPUT1   EQU     $DD53         ;DB54 キーボード1Byte入力ルーチン
00017      FBFA         RETADD   EQU     $FBFA         ;本来のBIOSジャンプルーチンエントリ
00018      FE05         SNDBYTE  EQU     $FE05         ;(BOOTROM)Arduinoへ1Byte送信
00019      FE08         RCVBYTE  EQU     $FE08         ;(BOOTROM)Arduinoから1Byte受信
00020      FE0B         MOTOR    EQU     $FE0B         ;(BOOTROM)BIOS[01]モーター制御
00021      FE0E         WRITE1BYTE EQU   $FE0E         ;(BOOTROM)BIOS[02]SD-CARDへ1Byte書き込み
00022      FE11         READ1BYTE EQU    $FE11         ;(BOOTROM)BIOS[03]SD-CARDから1Byte読み込み
00023                   *
00024 083C              START
00025                   * 拡張コマンドテーブルを#NEWTBLにコピーして拡張コマンド「SDIR」「SETL」「SETS」「SDON」「CMT」を追加
00026                   *		LDB		EXTNUM		;B <- 拡張コマンド数
00027                   *		INC		EXTNUM		;拡張コマンド数+1
00028                   *		INC		EXTNUM		;拡張コマンド数+1
00029                   *		INC		EXTNUM		;拡張コマンド数+1
00030                   *		INC		EXTNUM		;拡張コマンド数+1
00031                   *		INC		EXTNUM		;拡張コマンド数+1
00032 083C 8602                  LDA     #2
00033 083E B701F9                STA     EXTNUM
00034 0841 338D021D              LEAU    NEWTBL,PCR    ;U <- 新拡張コマンドTBLアドレス
00035 0845 FF01FA                STU     EXTTBL        ;拡張コマンドTBLポインタ <- 新拡張コマンドTBLアドレス
00036 0848 338D0012              LEAU    NEWJMP,PCR    ;U <- 新拡張コマンドTBLアドレス
00037 084C FF01FC                STU     EXTJMP        ;拡張コマンドTBLポインタ <- 新拡張コマンドTBLアドレス
00038                   *
00039 084F                       
00040                   *BIOS CWRITE CREADフック
00041 084F 308D0178     BIOSF    LEAX    BIOSR,PCR
00042 0853 9FDF                  STX     BIOSV+1       ;($DF) <- BIOSフック用ルーチンアドレス
00043 0855                       
00044                   *SD関連書き換え終了メッセージ
00045 0855 0FBF         ST1      CLR     <FILENO       ;($00BF) <- 0 画面出力へ設定
00046 0857 308D018F              LEAX    MSG1,PCR
00047 085B 7EDB1B                JMP     LOUT1         ;「FM-8_SD READY OK!」を表示
00048 085E                       
00049                   *		RTS						;BASICへ戻る
00050 085E                       
00051                   *追加コマンド判定ルーチン
00052 085E 81EE         NEWJMP   CMPA    #$EE          ;DISK?
00053 0860 2502                  BLO     PRC1
00054 0862 8006                  SUBA    #6
00055 0864 80E8         PRC1     SUBA    #$E8          ;「SDIR」判定
00056 0866 2604                  BNE     NEWTRN2
00057 0868 9DD2                  JSR     READ1         ;入力コマンド解釈ポインタ+1
00058 086A 200B                  BRA     SDIR_PRG
00059 086C 4A           NEWTRN2  DECA                  ;「SETS」判定
00060 086D 2605                  BNE     NEWTRN6
00061 086F 9DD2                  JSR     READ1         ;入力コマンド解釈ポインタ+1
00062 0871 1600E1                LBRA    SETS_PRG
00063 0874 7E9740       NEWTRN6  JMP     ERRENT
00064 0877                       
00065                   *「SDIR」処理
00066 0877              SDIR_PRG
00067 0877 8652                  LDA     #$52
00068 0879 BDFE05                JSR     SNDBYTE       ;Aレジスタのコマンドコードを送信
00069 087C BDFE08                JSR     RCVBYTE       ;状態取得(00H=OK)
00070 087F 4D                    TSTA
00071 0880 1026010C              LBNE    ERRC
00072 0884                       
00073 0884 9DD8                  JSR     READ0         ;SDIRの次に文字列があるか?
00074 0886 260B                  BNE     SDIR1         ;あればSDIR1へ
00075 0888 4F                    CLRA
00076 0889 BDFE05                JSR     SNDBYTE       ;継続指示
00077 088C 8601                  LDA     #$01
00078 088E BDFE05                JSR     SNDBYTE       ;なければ送信文字列数1文字として終了コード送信へ
00079 0891 2020                  BRA     SDIR3
00080 0893 8122         SDIR1    CMPA    #$22          ;次の文字がダブルコーテーションでなかったらエラー
00081 0895 102600A6              LBNE    ERRNAME
00082 0899 4F                    CLRA
00083 089A BDFE05                JSR     SNDBYTE       ;継続指示
00084 089D BD9D86                JSR     GETSTR        ;文字列取得
00085 08A0 3404                  PSHS    B
00086 08A2 3502                  PULS    A
00087 08A4 4C                    INCA
00088 08A5 BDFE05                JSR     SNDBYTE       ;文字列数を送信
00089 08A8 A680         SDIR2    LDA     ,X+
00090 08AA BDC7E0                JSR     AZLCNV        ;文字列を1文字取得して大文字に変換
00091 08AD BDFE05                JSR     SNDBYTE       ;送信
00092 08B0 5A                    DECB
00093 08B1 26F5                  BNE     SDIR2
00094 08B3                       
00095 08B3 4F           SDIR3    CLRA
00096 08B4 BDFE05                JSR     SNDBYTE       ;文字列送信終了コード送信
00097 08B7                       
00098 08B7 BDFE08                JSR     RCVBYTE       ;状態取得(00H=OK)
00099 08BA 4D                    TSTA
00100 08BB 102600D1              LBNE    ERRC          ;エラー処理へ
00101 08BF                       
00102 08BF 0FBF                  CLR     <FILENO
00103 08C1 108E053F     DL1      LDY     #LBUF         ;Arduinoから送られてくる文字列を#LBUFへ格納
00104 08C5 BDFE08       DL2      JSR     RCVBYTE
00105 08C8 4D                    TSTA
00106 08C9 2710                  BEQ     DL3           ;$00を受信するまでを一行とする
00107 08CB 81FF                  CMPA    #$FF
00108 08CD 271F                  BEQ     DL4           ;$FFを受信したら終了
00109 08CF 81FD                  CMPA    #$FD
00110 08D1 271F                  BEQ     DL9           ;$FD受信で文字列を取得してSETLしたことを表示
00111 08D3 81FE                  CMPA    #$FE
00112 08D5 273B                  BEQ     DL5           ;$FEを受信したら一時停止して一文字入力待ち
00113 08D7 A7A0                  STA     ,Y+
00114 08D9 20EA                  BRA     DL2
00115 08DB                       
00116 08DB              DL3
00117 08DB 860D                  LDA     #$0D          ;$00を受信したら一行分を表示して改行
00118 08DD A7A0                  STA     ,Y+
00119 08DF 860A                  LDA     #$0A
00120 08E1 A7A0                  STA     ,Y+
00121 08E3                       
00122 08E3 4F                    CLRA
00123 08E4 A7A0                  STA     ,Y+
00124 08E6 8E053F                LDX     #LBUF
00125 08E9 BDDB1B                JSR     LOUT1
00126 08EC 20D3         DL33     BRA     DL1
00127 08EE                       
00128 08EE BDFE08       DL4      JSR     RCVBYTE       ;状態取得(00H=OK)して終了
00129 08F1 39                    RTS
00130 08F2                       
00131 08F2 108E053F     DL9      LDY     #LBUF         ;文字列を取得してSETLしたことを表示
00132 08F6 BDFE08       DL91     JSR     RCVBYTE       ;#LBUFへ文字列格納
00133 08F9 A7A0                  STA     ,Y+
00134 08FB 4D                    TSTA                  ;$00を受信するまで受信処理
00135 08FC 26F8                  BNE     DL91
00136 08FE 8E053F                LDX     #LBUF
00137 0901 BDDB1B                JSR     LOUT1
00138 0904 308D00F0              LEAX    MSG3,PCR
00139 0908 BDDB1B                JSR     LOUT1         ;SETLしたことを表示
00140 090B BDFE08                JSR     RCVBYTE       ;状態取得読み飛ばし
00141 090E BDFE08                JSR     RCVBYTE       ;状態取得読み飛ばし
00142 0911 39                    RTS
00143 0912                       
00144 0912 308D0100     DL5      LEAX    MSGKEY,PCR    ;一時停止して一文字入力待ち
00145 0916 BDDB1B                JSR     LOUT1         ;HIT ANT KEY表示
00146 0919 BDDD53       DL6      JSR     INPUT1
00147 091C 811B                  CMPA    #$1B
00148 091E 2717                  BEQ     DL7           ;ESCで打ち切り
00149 0920 8130                  CMPA    #$30          ;数字0～9ならそのままArduinoへ送信してSETL処理へ
00150 0922 2504                  BLO     DL61
00151 0924 813A                  CMPA    #$3A
00152 0926 2511                  BLO     DL8           
00153 0928 8142         DL61     CMPA    #$42
00154 092A 270D                  BEQ     DL8           ;「B」で前ページ
00155 092C 8162                  CMPA    #$62
00156 092E 2703                  BEQ     DL62          ;「b」で前ページ
00157 0930 4F                    CLRA
00158 0931 2006                  BRA     DL8           ;それ以外で継続
00159 0933 8642         DL62     LDA     #$42          ;b->B
00160 0935 2002                  BRA     DL8
00161 0937 86FF         DL7      LDA     #$FF
00162 0939 BDFE05       DL8      JSR     SNDBYTE
00163 093C 2087                  BRA     DL2
00164 093E                       
00165 093E 39           SDIR99   RTS
00166 093F                       
00167 093F 3402         ERRNAME  PSHS    A
00168 0941 86FF                  LDA     #$FF
00169 0943 BDFE05                JSR     SNDBYTE       ;打ち切り指示
00170 0946 3502                  PULS    A
00171 0948 4D                    TSTA                  ;$00ならポインタを進めない SETL SETSのみはERROR
00172 0949 2705                  BEQ     ERRNM2
00173 094B 9DD2         ERRNM1   JSR     READ1         ;入力コマンド解釈ポインタ+1
00174 094D 4D                    TSTA
00175 094E 26FB                  BNE     ERRNM1
00176 0950 86F5         ERRNM2   LDA     #$F5          ;NOT DOUBLE QUOTATION表示
00177 0952 16003B                LBRA    ERRC
00178 0955                       
00179                   *「SETS」処理
00180 0955              SETS_PRG
00181 0955 8654                  LDA     #$54
00182 0957 BDFE05                JSR     SNDBYTE       ;Aレジスタのコマンドコードを送信
00183 095A BDFE08                JSR     RCVBYTE       ;状態取得(00H=OK)
00184 095D 4D                    TSTA
00185 095E 2630                  BNE     ERRC
00186 0960 9DD8                  JSR     READ0
00187 0962 8122                  CMPA    #$22          ;次の文字がダブルコーテーションでなかったらエラー
00188 0964 26D9                  BNE     ERRNAME
00189 0966 4F                    CLRA
00190 0967 BDFE05                JSR     SNDBYTE       ;継続指示
00191 096A BD9D86                JSR     GETSTR        ;文字列取得
00192 096D 3404                  PSHS    B
00193 096F 3502                  PULS    A
00194 0971 4C                    INCA
00195 0972 BDFE05                JSR     SNDBYTE       ;文字列数送信
00196 0975                       
00197 0975              SETS1
00198 0975 A680                  LDA     ,X+           ;文字列送信
00199 0977 BDFE05                JSR     SNDBYTE
00200 097A 5A                    DECB
00201 097B 26F8                  BNE     SETS1
00202 097D 4F                    CLRA
00203 097E BDFE05                JSR     SNDBYTE
00204 0981                       
00205 0981 BDFE08                JSR     RCVBYTE       ;状態取得(00H=OK)
00206 0984 4D                    TSTA
00207 0985 2609                  BNE     ERRC
00208 0987                       
00209 0987 0FBF                  CLR     <FILENO       ;SAVE FILE SET OK!表示
00210 0989 308D007A              LEAX    MSG4,PCR
00211 098D 7EDB1B                JMP     LOUT1
00212                   *		RTS
00213 0990                       
00214 0990 0FBF         ERRC     CLR     <FILENO
00215 0992 81F0                  CMPA    #$F0
00216 0994 2606                  BNE     ERR1
00217 0996 308D009D              LEAX    ERR_F0,PCR
00218 099A 202C                  BRA     ERRR
00219 099C 81F1         ERR1     CMPA    #$F1
00220 099E 2606                  BNE     ERR2
00221 09A0 308D00A0              LEAX    ERR_F1,PCR
00222 09A4 2022                  BRA     ERRR
00223 09A6 81F2         ERR2     CMPA    #$F2
00224 09A8 2606                  BNE     ERR3
00225 09AA 308D009C              LEAX    ERR_F2,PCR
00226 09AE 2018                  BRA     ERRR
00227 09B0 81F4         ERR3     CMPA    #$F4
00228 09B2 2606                  BNE     ERR4
00229 09B4 308D0098              LEAX    ERR_F4,PCR
00230 09B8 200E                  BRA     ERRR
00231 09BA 81F5         ERR4     CMPA    #$F5
00232 09BC 2606                  BNE     ERR99
00233 09BE 308D0094              LEAX    ERR_F5,PCR
00234 09C2 2004                  BRA     ERRR
00235 09C4                       
00236 09C4 308D0094     ERR99    LEAX    ERR_F99,PCR
00237 09C8                       
00238 09C8 7EDB1B       ERRR     JMP     LOUT1
00239                   *		RTS
00240 09CB                       
00241                   *BIOS CWRITE CREADフック
00242 09CB 347F         BIOSR    PSHS    U,Y,X,DP,D,CC
00243 09CD E684                  LDB     ,X            ;B <- RQNO
00244 09CF C101                  CMPB    #1
00245 09D1 270E                  BEQ     BIOSR1
00246 09D3 C102                  CMPB    #2            ;RQNOが2なら1Byte書出し処理へ
00247 09D5 270D                  BEQ     BIOSR2
00248 09D7 C103                  CMPB    #3            ;RQNOが3なら1Byte読み込み処理へ
00249 09D9 270C                  BEQ     BIOSR3
00250 09DB 357F                  PULS    CC,D,DP,X,Y,U
00251 09DD 6E9FFBFA              JMP     [RETADD]      ;以外なら本来のBIOS処理継続
00252 09E1                       
00253 09E1 7EFE0B       BIOSR1   JMP     MOTOR
00254 09E4 7EFE0E       BIOSR2   JMP     WRITE1BYTE
00255 09E7 7EFE11       BIOSR3   JMP     READ1BYTE
00256 09EA                       
00257 09EA 464D2D385F53 MSG1     FCC     /FM-8_SD OK!/ 
      09F0 44204F4B21  
00258 09F5 0D0A00                FCB     $0D,$0A,$00
00259 09F8                       
00260 09F8 4C4F41442053 MSG3     FCC     /LOAD SET OK!/ 
      09FE 4554204F4B21
00261 0A04 0D0A00                FCB     $0D,$0A,$00
00262 0A07                       
00263 0A07 534156452053 MSG4     FCC     /SAVE SET OK!/ 
      0A0D 4554204F4B21
00264 0A13 0D0A00                FCB     $0D,$0A,$00
00265 0A16                       
00266 0A16 53454C3A302D MSGKEY   FCC     /SEL:0-9 NXT:ANY BACK:B BRK:ESC/ 
      0A1C 39204E58543A
      0A22 414E59204241
      0A28 434B3A422042
      0A2E 524B3A455343
00267 0A34 0D0A00                FCB     $0D,$0A,$00
00268 0A37                       
00269 0A37 534420494E49 ERR_F0   FCC     /SD INI ERR/  
      0A3D 20455252    
00270 0A41 0D0A00                FCB     $0D,$0A,$00
00271 0A44                       
00272 0A44 455252       ERR_F1   FCC     /ERR/         
00273 0A47 0D0A00                FCB     $0D,$0A,$00
00274 0A4A                       
00275 0A4A 455252       ERR_F2   FCC     /ERR/         
00276 0A4D 0D0A00                FCB     $0D,$0A,$00
00277 0A50                       
00278 0A50 455252       ERR_F4   FCC     /ERR/         
00279 0A53 0D0A00                FCB     $0D,$0A,$00
00280 0A56                       
00281 0A56 455252       ERR_F5   FCC     /ERR/         
00282 0A59 0D0A00                FCB     $0D,$0A,$00
00283 0A5C                       
00284 0A5C 455252       ERR_F99  FCC     /ERR/         
00285 0A5F 0D0A00                FCB     $0D,$0A,$00
00286 0A62                       
00287                   *新拡張コマンドTBL
00288 0A62 534449       NEWTBL   FCC     /SDI/         
00289 0A65 D2                    FCB     'R+$80
00290 0A66 534554                FCC     /SET/         
00291 0A69 D3                    FCB     'S+$80
00292 0A6A 454E                  FCC     /EN/          ;NEWTBL領域の終わり位置を示す
00293 0A6C                       
00294 0A6C                       END

SYMBOL TABLE

00BF FILENO     00D2 READ1      00D8 READ0      00DE BIOSV      01F9 EXTNUM  
01FA EXTTBL     01FC EXTJMP     053F LBUF       9740 ERRENT     9D86 GETSTR  
C7E0 AZLCNV     DB1B LOUT1      DD53 INPUT1     FBFA RETADD     FE05 SNDBYTE 
FE08 RCVBYTE    FE0B MOTOR      FE0E WRITE1BY   FE11 READ1BYT   083C START   
084F BIOSF      0855 ST1        085E NEWJMP     0864 PRC1       086C NEWTRN2 
0874 NEWTRN6    0877 SDIR_PRG   0893 SDIR1      08A8 SDIR2      08B3 SDIR3   
08C1 DL1        08C5 DL2        08DB DL3        08EC DL33       08EE DL4     
08F2 DL9        08F6 DL91       0912 DL5        0919 DL6        0928 DL61    
0933 DL62       0937 DL7        0939 DL8        093E SDIR99     093F ERRNAME 
094B ERRNM1     0950 ERRNM2     0955 SETS_PRG   0975 SETS1      0990 ERRC    
099C ERR1       09A6 ERR2       09B0 ERR3       09BA ERR4       09C4 ERR99   
09C8 ERRR       09CB BIOSR      09E1 BIOSR1     09E4 BIOSR2     09E7 BIOSR3  
09EA MSG1       09F8 MSG3       0A07 MSG4       0A16 MSGKEY     0A37 ERR_F0  
0A44 ERR_F1     0A4A ERR_F2     0A50 ERR_F4     0A56 ERR_F5     0A5C ERR_F99 
0A62 NEWTBL     

Total symbol=71
Total errors=0
