00001 6000                       ORG     $6000
00002 6000                       
00003      00BF         FILENO   EQU     $00BF         ;ファイル番号
00004      00D2         READ1    EQU     $00D2         ;汎用読み込みルーチン
00005      00D8         READ0    EQU     $00D8         ;汎用読み込みルーチン、ポインタ移動無し
00006      00DE         BIOSV    EQU     $00DE         ;BIOSジャンプルーチン
00007      0203         EXTNUM   EQU     $0203         ;拡張予約語の数
00008      0204         EXTTBL   EQU     $0204         ;拡張予約語の綴りテーブルの先頭アドレス
00009      0206         EXTJMP   EQU     $0206
00010                   *EXTTRN		EQU		$0201	;Syntax Errorのアドレス
00011      053F         LBUF     EQU     $053F         ;数値->文字列変換における文字列バッファ(ファイル名受信バッファとして使用)
00012      9740         ERRENT   EQU     $9740         ;$92A0 Syntax Errorエントリ
00013      9D86         GETSTR   EQU     $9D86         ;$98F1 文字列実効番地読み出し
00014      C7E0         AZLCNV   EQU     $C7E0         ;$C495 英小文字->大文字変換ルーチン
00015      DB1B         LOUT1    EQU     $DB1B         ;D90F 文字列出力ルーチン
00016      DD53         INPUT1   EQU     $DD53         ;DB54 キーボード1Byte入力ルーチン
00017      FBFA         RETADD   EQU     $FBFA         ;本来のBIOSジャンプルーチンエントリ
00018      0033         TEXTOP   EQU     $0033
00019      93FC         NEW2     EQU     $93FC         ;$8F39
00020      9345         READY    EQU     $9345         ;$8E72
00021      FDF0         PIOA     EQU     $FDF0
00022      FDF1         PIOB     EQU     $FDF1
00023      FDF2         PIOC     EQU     $FDF2
00024      FDF3         PIOR     EQU     $FDF3
00025                   *
00026      FD04         STOPF    EQU     $FD04
00027      FBFC         BSRES    EQU     $FBFC
00028      FBFE         ROMENT   EQU     $FBFE
00029      FC7F         BOTSTK   EQU     $FC7F
00030 6000                       
00031      FFCF         NMIRTI   EQU     $FFCF
00032      FFFC         PNMI     EQU     $FFFC
00033 6000                       
00034 6000 8D26         TRNS     BSR     PIOINI        ;PIO初期化
00035 6002 DE33                  LDU     TEXTOP        ;U <- SDアクセスルーチンの転送先
00036 6004 308D002D              LEAX    START,PCR     ;X <- SDアクセスルーチンの転送元
00037 6008 108E03E1              LDY     #TBLEND-START ;転送するバイト数
00038 600C A680         TRNS1    LDA     ,X+
00039 600E A7C0                  STA     ,U+
00040 6010 313F                  LEAY    -1,Y
00041 6012 26F8                  BNE     TRNS1
00042 6014                       
00043 6014 3341                  LEAU    1,U
00044 6016 3440                  PSHS    U
00045 6018                       
00046 6018 9E33                  LDX     TEXTOP
00047 601A AD84                  JSR     ,X            ;SDアクセス初期設定
00048 601C                       
00049 601C 3510                  PULS    X
00050 601E                       
00051 601E 9F33                  STX     TEXTOP        ;フリーエリア先頭アドレス再設定
00052 6020 6F80                  CLR     ,X+
00053 6022 BD93FC                JSR     NEW2
00054 6025 7E9345                JMP     READY
00055 6028                       
00056                   **** 8255初期化 ****
00057                   *PORTC下位BITをOUTPUT、上位BITをINPUT、PORTBをINPUT、PORTAをOUTPUT
00058 6028 868A         PIOINI   LDA     #$8A
00059 602A B7FDF3                STA     PIOR          ;PIOR <- $8A
00060 602D 4F                    CLRA
00061 602E B7FDF0                STA     PIOA          ;PIOA <- $00
00062 6031 B7FDF2                STA     PIOC          ;PIOC <- $00
00063 6034 39                    RTS
00064 6035                       
00065                   *
00066                   *		ORG		$083C
00067 6035              START
00068                   * 拡張コマンドテーブルを#NEWTBLにコピーして拡張コマンド「SDIR」「SETL」「SETS」「SDON」「CMT」を追加
00069                   *		LDB		EXTNUM		;B <- 拡張コマンド数
00070                   *		INC		EXTNUM		;拡張コマンド数+1
00071                   *		INC		EXTNUM		;拡張コマンド数+1
00072                   *		INC		EXTNUM		;拡張コマンド数+1
00073                   *		INC		EXTNUM		;拡張コマンド数+1
00074                   *		INC		EXTNUM		;拡張コマンド数+1
00075 6035 8605                  LDA     #5
00076 6037 B70203                STA     EXTNUM
00077 603A 338D03C5              LEAU    NEWTBL,PCR    ;U <- 新拡張コマンドTBLアドレス
00078 603E FF0204                STU     EXTTBL        ;拡張コマンドTBLポインタ <- 新拡張コマンドTBLアドレス
00079 6041 338D0013              LEAU    NEWJMP,PCR    ;U <- 新拡張コマンドTBLアドレス
00080 6045 FF0206                STU     EXTJMP        ;拡張コマンドTBLポインタ <- 新拡張コマンドTBLアドレス
00081                   *
00082 6048                       
00083                   *BIOS CWRITE CREADフック
00084 6048 308D01F0     BIOSF    LEAX    BIOSR,PCR
00085 604C 9FDF                  STX     BIOSV+1       ;($DF) <- BIOSフック用ルーチンアドレス
00086 604E                       
00087                   *SD関連書き換え終了メッセージ
00088 604E 0FBF         ST1      CLR     <FILENO       ;($00BF) <- 0 画面出力へ設定
00089 6050 308D0207              LEAX    MSG1,PCR
00090 6054 BDDB1B                JSR     LOUT1         ;「FM-8_SD READY OK!」を表示
00091 6057                       
00092 6057 39                    RTS                   ;BASICへ戻る
00093 6058                       
00094                   *追加コマンド判定ルーチン
00095 6058 81EE         NEWJMP   CMPA    #$EE          ;DISK?
00096 605A 2502                  BLO     PRC1
00097 605C 8006                  SUBA    #6
00098 605E 80E8         PRC1     SUBA    #$E8          ;「SDIR」判定
00099 6060 2604                  BNE     NEWTRN2
00100 6062 9DD2                  JSR     READ1         ;入力コマンド解釈ポインタ+1
00101 6064 2023                  BRA     SDIR_PRG
00102 6066 4A           NEWTRN2  DECA                  ;「SETL」判定
00103 6067 2605                  BNE     NEWTRN3
00104 6069 9DD2                  JSR     READ1         ;入力コマンド解釈ポインタ+1
00105 606B 1600F9                LBRA    SETL_PRG
00106 606E 4A           NEWTRN3  DECA                  ;「SETS」判定
00107 606F 2605                  BNE     NEWTRN4
00108 6071 9DD2                  JSR     READ1         ;入力コマンド解釈ポインタ+1
00109 6073 16012F                LBRA    SETS_PRG
00110 6076 4A           NEWTRN4  DECA                  ;「SDON」判定
00111 6077 2605                  BNE     NEWTRN5
00112 6079 9DD2                  JSR     READ1         ;入力コマンド解釈ポインタ+1
00113 607B 160163                LBRA    SDON_PRG
00114 607E 4A           NEWTRN5  DECA                  ;「CMT」判定
00115 607F 2605                  BNE     NEWTRN6
00116 6081 9DD2                  JSR     READ1         ;入力コマンド解釈ポインタ+1
00117 6083 16016B                LBRA    CMT_PRG
00118 6086 7E9740       NEWTRN6  JMP     ERRENT
00119 6089                       
00120                   *「SDIR」処理
00121 6089              SDIR_PRG
00122 6089 8652                  LDA     #$52
00123 608B 170352                LBSR    SNDBYTE       ;Aレジスタのコマンドコードを送信
00124 608E 170339                LBSR    RCVBYTE       ;状態取得(00H=OK)
00125 6091 4D                    TSTA
00126 6092 1026016A              LBNE    ERRC
00127 6096                       
00128 6096 9DD8                  JSR     READ0         ;SDIRの次に文字列があるか?
00129 6098 260B                  BNE     SDIR1         ;あればSDIR1へ
00130 609A 4F                    CLRA
00131 609B 170342                LBSR    SNDBYTE       ;継続指示
00132 609E 8601                  LDA     #$01
00133 60A0 17033D                LBSR    SNDBYTE       ;なければ送信文字列数1文字として終了コード送信へ
00134 60A3 2020                  BRA     SDIR3
00135 60A5 8122         SDIR1    CMPA    #$22          ;次の文字がダブルコーテーションでなかったらエラー
00136 60A7 102600A6              LBNE    ERRNAME
00137 60AB 4F                    CLRA
00138 60AC 170331                LBSR    SNDBYTE       ;継続指示
00139 60AF BD9D86                JSR     GETSTR        ;文字列取得
00140 60B2 3404                  PSHS    B
00141 60B4 3502                  PULS    A
00142 60B6 4C                    INCA
00143 60B7 170326                LBSR    SNDBYTE       ;文字列数を送信
00144 60BA A680         SDIR2    LDA     ,X+
00145 60BC BDC7E0                JSR     AZLCNV        ;文字列を1文字取得して大文字に変換
00146 60BF 17031E                LBSR    SNDBYTE       ;送信
00147 60C2 5A                    DECB
00148 60C3 26F5                  BNE     SDIR2
00149 60C5                       
00150 60C5 4F           SDIR3    CLRA
00151 60C6 170317                LBSR    SNDBYTE       ;文字列送信終了コード送信
00152 60C9                       
00153 60C9 1702FE                LBSR    RCVBYTE       ;状態取得(00H=OK)
00154 60CC 4D                    TSTA
00155 60CD 1026012F              LBNE    ERRC          ;エラー処理へ
00156 60D1                       
00157 60D1 0FBF                  CLR     <FILENO
00158 60D3 108E053F     DL1      LDY     #LBUF         ;Arduinoから送られてくる文字列を#LBUFへ格納
00159 60D7 1702F0       DL2      LBSR    RCVBYTE
00160 60DA 4D                    TSTA
00161 60DB 2710                  BEQ     DL3           ;$00を受信するまでを一行とする
00162 60DD 81FF                  CMPA    #$FF
00163 60DF 271F                  BEQ     DL4           ;$FFを受信したら終了
00164 60E1 81FD                  CMPA    #$FD
00165 60E3 271F                  BEQ     DL9           ;$FD受信で文字列を取得してSETLしたことを表示
00166 60E5 81FE                  CMPA    #$FE
00167 60E7 273B                  BEQ     DL5           ;$FEを受信したら一時停止して一文字入力待ち
00168 60E9 A7A0                  STA     ,Y+
00169 60EB 20EA                  BRA     DL2
00170 60ED                       
00171 60ED              DL3
00172 60ED 860D                  LDA     #$0D          ;$00を受信したら一行分を表示して改行
00173 60EF A7A0                  STA     ,Y+
00174 60F1 860A                  LDA     #$0A
00175 60F3 A7A0                  STA     ,Y+
00176 60F5                       
00177 60F5 4F                    CLRA
00178 60F6 A7A0                  STA     ,Y+
00179 60F8 8E053F                LDX     #LBUF
00180 60FB BDDB1B                JSR     LOUT1
00181 60FE 20D3         DL33     BRA     DL1
00182 6100                       
00183 6100 1702C7       DL4      LBSR    RCVBYTE       ;状態取得(00H=OK)して終了
00184 6103 39                    RTS
00185 6104                       
00186 6104 108E053F     DL9      LDY     #LBUF         ;文字列を取得してSETLしたことを表示
00187 6108 1702BF       DL91     LBSR    RCVBYTE       ;#LBUFへ文字列格納
00188 610B A7A0                  STA     ,Y+
00189 610D 4D                    TSTA                  ;$00を受信するまで受信処理
00190 610E 26F8                  BNE     DL91
00191 6110 8E053F                LDX     #LBUF
00192 6113 BDDB1B                JSR     LOUT1
00193 6116 308D0155              LEAX    MSG3,PCR
00194 611A BDDB1B                JSR     LOUT1         ;SETLしたことを表示
00195 611D 1702AA                LBSR    RCVBYTE       ;状態取得読み飛ばし
00196 6120 1702A7                LBSR    RCVBYTE       ;状態取得読み飛ばし
00197 6123 39                    RTS
00198 6124                       
00199 6124 308D0188     DL5      LEAX    MSGKEY,PCR    ;一時停止して一文字入力待ち
00200 6128 BDDB1B                JSR     LOUT1         ;HIT ANT KEY表示
00201 612B BDDD53       DL6      JSR     INPUT1
00202 612E 811B                  CMPA    #$1B
00203 6130 2717                  BEQ     DL7           ;ESCで打ち切り
00204 6132 8130                  CMPA    #$30          ;数字0～9ならそのままArduinoへ送信してSETL処理へ
00205 6134 2504                  BLO     DL61
00206 6136 813A                  CMPA    #$3A
00207 6138 2511                  BLO     DL8           
00208 613A 8142         DL61     CMPA    #$42
00209 613C 270D                  BEQ     DL8           ;「B」で前ページ
00210 613E 8162                  CMPA    #$62
00211 6140 2703                  BEQ     DL62          ;「b」で前ページ
00212 6142 4F                    CLRA
00213 6143 2006                  BRA     DL8           ;それ以外で継続
00214 6145 8642         DL62     LDA     #$42          ;b->B
00215 6147 2002                  BRA     DL8
00216 6149 86FF         DL7      LDA     #$FF
00217 614B 170292       DL8      LBSR    SNDBYTE
00218 614E 2087                  BRA     DL2
00219 6150                       
00220 6150 39           SDIR99   RTS
00221 6151                       
00222 6151 3402         ERRNAME  PSHS    A
00223 6153 86FF                  LDA     #$FF
00224 6155 170288                LBSR    SNDBYTE       ;打ち切り指示
00225 6158 3502                  PULS    A
00226 615A 4D                    TSTA                  ;$00ならポインタを進めない SETL SETSのみはERROR
00227 615B 2705                  BEQ     ERRNM2
00228 615D 9DD2         ERRNM1   JSR     READ1         ;入力コマンド解釈ポインタ+1
00229 615F 4D                    TSTA
00230 6160 26FB                  BNE     ERRNM1
00231 6162 86F5         ERRNM2   LDA     #$F5          ;NOT DOUBLE QUOTATION表示
00232 6164 160099                LBRA    ERRC
00233 6167                       
00234                   *「SETL」処理
00235 6167              SETL_PRG
00236 6167 8653                  LDA     #$53
00237 6169 170274                LBSR    SNDBYTE       ;Aレジスタのコマンドコードを送信
00238 616C 17025B                LBSR    RCVBYTE       ;状態取得(00H=OK)
00239 616F 4D                    TSTA
00240 6170 1026008C              LBNE    ERRC
00241 6174 9DD8                  JSR     READ0
00242 6176 8122                  CMPA    #$22          ;次の文字がダブルコーテーションでなかったらエラー
00243 6178 26D7                  BNE     ERRNAME
00244 617A 4F                    CLRA
00245 617B 170262                LBSR    SNDBYTE       ;継続指示
00246 617E BD9D86                JSR     GETSTR        ;文字列取得
00247 6181 3404                  PSHS    B
00248 6183 3502                  PULS    A
00249 6185 4C                    INCA
00250 6186 170257                LBSR    SNDBYTE       ;文字列数送信
00251 6189                       
00252 6189              SETL1
00253 6189 A680                  LDA     ,X+           ;文字列送信
00254 618B 170252                LBSR    SNDBYTE
00255 618E 5A                    DECB
00256 618F 26F8                  BNE     SETL1
00257 6191 4F                    CLRA
00258 6192 17024B                LBSR    SNDBYTE
00259 6195                       
00260 6195 170232                LBSR    RCVBYTE       ;状態取得(00H=OK)
00261 6198 4D                    TSTA
00262 6199 2665                  BNE     ERRC
00263 619B                       
00264 619B 0FBF                  CLR     <FILENO       ;LOAD FILE SET OK!表示
00265 619D 308D00CE              LEAX    MSG3,PCR
00266 61A1 BDDB1B                JSR     LOUT1
00267 61A4 39                    RTS
00268 61A5                       
00269                   *「SETS」処理
00270 61A5              SETS_PRG
00271 61A5 8654                  LDA     #$54
00272 61A7 170236                LBSR    SNDBYTE       ;Aレジスタのコマンドコードを送信
00273 61AA 17021D                LBSR    RCVBYTE       ;状態取得(00H=OK)
00274 61AD 4D                    TSTA
00275 61AE 2650                  BNE     ERRC
00276 61B0 9DD8                  JSR     READ0
00277 61B2 8122                  CMPA    #$22          ;次の文字がダブルコーテーションでなかったらエラー
00278 61B4 269B                  BNE     ERRNAME
00279 61B6 4F                    CLRA
00280 61B7 170226                LBSR    SNDBYTE       ;継続指示
00281 61BA BD9D86                JSR     GETSTR        ;文字列取得
00282 61BD 3404                  PSHS    B
00283 61BF 3502                  PULS    A
00284 61C1 4C                    INCA
00285 61C2 17021B                LBSR    SNDBYTE       ;文字列数送信
00286 61C5                       
00287 61C5              SETS1
00288 61C5 A680                  LDA     ,X+           ;文字列送信
00289 61C7 170216                LBSR    SNDBYTE
00290 61CA 5A                    DECB
00291 61CB 26F8                  BNE     SETS1
00292 61CD 4F                    CLRA
00293 61CE 17020F                LBSR    SNDBYTE
00294 61D1                       
00295 61D1 1701F6                LBSR    RCVBYTE       ;状態取得(00H=OK)
00296 61D4 4D                    TSTA
00297 61D5 2629                  BNE     ERRC
00298 61D7                       
00299 61D7 0FBF                  CLR     <FILENO       ;SAVE FILE SET OK!表示
00300 61D9 308D00A6              LEAX    MSG4,PCR
00301 61DD BDDB1B                JSR     LOUT1
00302 61E0 39                    RTS
00303 61E1                       
00304                   *「SDON」処理
00305 61E1              SDON_PRG
00306 61E1                       
00307                   *BIOS CWRITE CREADフック	;CMTコマンドでBIOSフックをCMTに戻したときにSDへ再度変更する
00308 61E1 308D0057              LEAX    BIOSR,PCR
00309 61E5 9FDF                  STX     BIOSV+1       ;($DF) <- BIOSフック用ルーチンアドレス
00310 61E7                       
00311 61E7 0FBF                  CLR     <FILENO       ;SD ON OK!表示
00312 61E9 308D00AA              LEAX    MSG5,PCR
00313 61ED BDDB1B                JSR     LOUT1
00314 61F0 39                    RTS
00315 61F1                       
00316                   *「CMT」処理
00317 61F1              CMT_PRG
00318 61F1                       
00319                   *BIOS CWRITE CREADフック	;変更したBIOSフックを元にもどしてCMTを有効にする
00320 61F1 8EF2D8                LDX     #$F2D8
00321 61F4 9FDF                  STX     BIOSV+1       ;($DF) <- BIOS通常処理へ
00322 61F6                       
00323 61F6 0FBF                  CLR     <FILENO       ;CMT ON OK!表示
00324 61F8 308D00A7              LEAX    MSG6,PCR
00325 61FC BDDB1B                JSR     LOUT1
00326 61FF 39                    RTS
00327 6200                       
00328 6200 0FBF         ERRC     CLR     <FILENO
00329 6202 81F0                  CMPA    #$F0
00330 6204 2606                  BNE     ERR1
00331 6206 308D00CD              LEAX    ERR_F0,PCR
00332 620A 202C                  BRA     ERRR
00333 620C 81F1         ERR1     CMPA    #$F1
00334 620E 2606                  BNE     ERR2
00335 6210 308D00DC              LEAX    ERR_F1,PCR
00336 6214 2022                  BRA     ERRR
00337 6216 81F2         ERR2     CMPA    #$F2
00338 6218 2606                  BNE     ERR3
00339 621A 308D00E3              LEAX    ERR_F2,PCR
00340 621E 2018                  BRA     ERRR
00341 6220 81F4         ERR3     CMPA    #$F4
00342 6222 2606                  BNE     ERR4
00343 6224 308D00EB              LEAX    ERR_F4,PCR
00344 6228 200E                  BRA     ERRR
00345 622A 81F5         ERR4     CMPA    #$F5
00346 622C 2606                  BNE     ERR99
00347 622E 308D00ED              LEAX    ERR_F5,PCR
00348 6232 2004                  BRA     ERRR
00349 6234                       
00350 6234 308D00FE     ERR99    LEAX    ERR_F99,PCR
00351 6238                       
00352 6238 BDDB1B       ERRR     JSR     LOUT1
00353 623B 39                    RTS
00354 623C                       
00355                   *BIOS CWRITE CREADフック
00356 623C 347F         BIOSR    PSHS    U,Y,X,DP,D,CC
00357 623E E684                  LDB     ,X            ;B <- RQNO
00358 6240 C101                  CMPB    #1
00359 6242 270E                  BEQ     BIOSR1
00360 6244 C102                  CMPB    #2            ;RQNOが2なら1Byte書出し処理へ
00361 6246 270D                  BEQ     BIOSR2
00362 6248 C103                  CMPB    #3            ;RQNOが3なら1Byte読み込み処理へ
00363 624A 270C                  BEQ     BIOSR3
00364 624C 357F                  PULS    CC,D,DP,X,Y,U
00365 624E 6E9FFBFA              JMP     [RETADD]      ;以外なら本来のBIOS処理継続
00366 6252                       
00367 6252 1600F1       BIOSR1   LBRA    MOTOR
00368 6255 16010C       BIOSR2   LBRA    WRITE1BYTE
00369 6258 160150       BIOSR3   LBRA    READ1BYTE
00370 625B                       
00371 625B 464D2D385F53 MSG1     FCC     /FM-8_SD READY OK!/ 
      6261 442052454144
      6267 59204F4B21  
00372 626C 0D0A00                FCB     $0D,$0A,$00
00373 626F                       
00374 626F 4C4F41442046 MSG3     FCC     /LOAD FILE SET OK!/ 
      6275 494C45205345
      627B 54204F4B21  
00375 6280 0D0A00                FCB     $0D,$0A,$00
00376 6283                       
00377 6283 534156452046 MSG4     FCC     /SAVE FILE SET OK!/ 
      6289 494C45205345
      628F 54204F4B21  
00378 6294 0D0A00                FCB     $0D,$0A,$00
00379 6297                       
00380 6297 5344204F4E20 MSG5     FCC     /SD ON OK!/   
      629D 4F4B21      
00381 62A0 0D0A00                FCB     $0D,$0A,$00
00382 62A3                       
00383 62A3 434D54204F4E MSG6     FCC     /CMT ON OK!/  
      62A9 204F4B21    
00384 62AD 0D0A00                FCB     $0D,$0A,$00
00385 62B0                       
00386 62B0 53454C454354 MSGKEY   FCC     /SELECT:0-9 NEXT:ANY BACK:B BREAK:ESC/ 
      62B6 3A302D39204E
      62BC 4558543A414E
      62C2 59204241434B
      62C8 3A4220425245
      62CE 414B3A455343
00387 62D4 0D0A00                FCB     $0D,$0A,$00
00388 62D7                       
00389 62D7 534420434152 ERR_F0   FCC     /SD CARD INITIATE ERROR/ 
      62DD 4420494E4954
      62E3 494154452045
      62E9 52524F52    
00390 62ED 0D0A00                FCB     $0D,$0A,$00
00391 62F0                       
00392 62F0 46494C45204E ERR_F1   FCC     /FILE NOT FOUND/ 
      62F6 4F5420464F55
      62FC 4E44        
00393 62FE 0D0A00                FCB     $0D,$0A,$00
00394 6301                       
00395 6301 46494C45204F ERR_F2   FCC     /FILE OPEN ERROR/ 
      6307 50454E204552
      630D 524F52      
00396 6310 0D0A00                FCB     $0D,$0A,$00
00397 6313                       
00398 6313 434D44204552 ERR_F4   FCC     /CMD ERROR/   
      6319 524F52      
00399 631C 0D0A00                FCB     $0D,$0A,$00
00400 631F                       
00401 631F 4E4F5420444F ERR_F5   FCC     /NOT DOUBLE QUOTATION/ 
      6325 55424C452051
      632B 554F54415449
      6331 4F4E        
00402 6333 0D0A00                FCB     $0D,$0A,$00
00403 6336                       
00404 6336 554E4B4E4F57 ERR_F99  FCC     /UNKNOWN ERROR/ 
      633C 4E204552524F
      6342 52          
00405 6343 0D0A00                FCB     $0D,$0A,$00
00406 6346                       
00407 6346                       
00408 6346              MOTOR
00409 6346 A602                  LDA     2,X           ;BIOS[01] モーター制御
00410 6348 81FF                  CMPA    #$FF
00411 634A 270C                  BEQ     MOTORON       ;$FFならMOTOR ON、違うならMOTOR OFF
00412 634C                       
00413 634C              MOTOROFF
00414 634C 8659                  LDA     #$59
00415 634E 17008F                LBSR    SNDBYTE       ;Aレジスタのコマンドコードを送信
00416 6351 8D77                  BSR     RCVBYTE       ;状態取得(00H=OK)
00417 6353 4D                    TSTA
00418 6354 2629                  BNE     ERR
00419 6356 2019                  BRA     RET1
00420 6358                       
00421 6358              MOTORON
00422 6358 8658                  LDA     #$58
00423 635A 170083                LBSR    SNDBYTE       ;Aレジスタのコマンドコードを送信
00424 635D 8D6B                  BSR     RCVBYTE       ;状態取得(00H=OK)
00425 635F 4D                    TSTA
00426 6360 261D                  BNE     ERR
00427 6362 200D                  BRA     RET1
00428 6364                       
00429                   *WRITE1BYTE					;BIOS[02] SD-CARDへ1Byte書き込み
00430 6364              WRITE1BYTE
00431 6364 8657                  LDA     #$57
00432 6366 8D78                  BSR     SNDBYTE       ;Aレジスタのコマンドコードを送信
00433 6368 8D60                  BSR     RCVBYTE       ;状態取得(00H=OK)
00434 636A 4D                    TSTA
00435 636B 2612                  BNE     ERR
00436 636D                       
00437 636D A602                  LDA     2,X
00438 636F 8D6F                  BSR     SNDBYTE       ;1Byte送信
00439 6371                       
00440 6371 357F         RET1     PULS    CC,D,DP,X,Y,U ;BIOS正常終了
00441 6373 6F01                  CLR     1,X
00442 6375 39                    RTS
00443 6376                       
00444 6376 0FBF         ERR11    CLR     <$00BF        ;BIOS異常終了
00445 6378 308D000C              LEAX    ERR_F6,PCR
00446 637C BDDB1B                JSR     LOUT1         ;MOTOR ON、READ1BYTEでFILEOPENされていなかったときにメッセージを表示
00447 637F                       
00448 637F 357F         ERR      PULS    CC,D,DP,X,Y,U
00449 6381 8652                  LDA     #$52
00450 6383 A701                  STA     1,X           ;エラーコードとキャリーをセットして終了、ただしF-BASIC側ではエラー処理なし
00451 6385 1A01                  ORCC    #$01
00452 6387 39                    RTS
00453 6388                       
00454 6388 524541442046 ERR_F6   FCC     /READ FILE IS NOT SET or FILE END/ 
      638E 494C45204953
      6394 204E4F542053
      639A 4554206F7220
      63A0 46494C452045
      63A6 4E44        
00455 63A8 0D0A00                FCB     $0D,$0A,$00
00456 63AB                       
00457                   *READ1BYTE					;BIOS[03] SD-CARDから1Byte読み込み
00458 63AB              READ1BYTE
00459 63AB 8656                  LDA     #$56
00460 63AD 8D31                  BSR     SNDBYTE       ;Aレジスタのコマンドコードを送信
00461 63AF 8D19                  BSR     RCVBYTE       ;状態取得(00H=OK)
00462 63B1 4D                    TSTA
00463 63B2 26C2                  BNE     ERR11
00464 63B4                       
00465 63B4 8D14                  BSR     RCVBYTE
00466 63B6 A702                  STA     2,X           ;受信した1Byteをセットして終了
00467 63B8 20B7                  BRA     RET1
00468 63BA                       
00469                   **** BUSYをCHECK(1) ****
00470                   ;PORTC BIT7が1になるまでLOOP
00471 63BA B6FDF2       F1CHK    LDA     PIOC
00472 63BD 8480                  ANDA    #$80          ;PORTC BIT7 = 1?
00473 63BF 27F9                  BEQ     F1CHK
00474 63C1 39                    RTS
00475 63C2                       
00476                   **** BUSYをCHECK(0) ****
00477                   ;PORTC BIT7が0になるまでLOOP
00478 63C2 B6FDF2       F2CHK    LDA     PIOC
00479 63C5 8480                  ANDA    #$80          ;PORTC BIT7 = 0?
00480 63C7 26F9                  BNE     F2CHK
00481 63C9 39                    RTS
00482 63CA                       
00483                   **** 1BYTE受信****
00484                   *受信データをアキュムレータAにセットしてリターン
00485 63CA 8DEE         RCVBYTE  BSR     F1CHK         ;PORTC BIT7が1になるまでLOOP
00486 63CC B6FDF1                LDA     PIOB          ;PORTB -> A
00487 63CF 3402                  PSHS    A
00488 63D1 8605                  LDA     #$05
00489 63D3 B7FDF3                STA     PIOR          ;PORTC BIT2 <- 1
00490 63D6 8DEA                  BSR     F2CHK         ;PORTC BIT7が0になるまでLOOP
00491 63D8 8604                  LDA     #$04
00492 63DA B7FDF3                STA     PIOR          ;PORTC BIT2 <- 0
00493 63DD 3502                  PULS    A
00494 63DF 39                    RTS
00495 63E0                       
00496                   **** 1BYTE送信 ****
00497                   *アキュムレータAの内容をPORTA下位4BITに4BITずつ送信
00498 63E0              SNDBYTE
00499 63E0 3402                  PSHS    A
00500 63E2 44                    LSRA
00501 63E3 44                    LSRA
00502 63E4 44                    LSRA
00503 63E5 44                    LSRA
00504 63E6 840F                  ANDA    #$0F
00505 63E8 8D07                  BSR     SND4BIT
00506 63EA 3502                  PULS    A
00507 63EC 840F                  ANDA    #$0F
00508 63EE 8D01                  BSR     SND4BIT
00509 63F0 39                    RTS
00510 63F1                       
00511                   **** 4BIT送信 ****
00512                   *アキュムレータA下位4ビットを送信する
00513 63F1              SND4BIT
00514 63F1 B7FDF0                STA     PIOA
00515 63F4 8605                  LDA     #$05
00516 63F6 B7FDF3                STA     PIOR          ;PORTC BIT2 <- 1
00517 63F9 8DBF                  BSR     F1CHK         ;PORTC BIT7が1になるまでLOOP
00518 63FB 8604                  LDA     #$04
00519 63FD B7FDF3                STA     PIOR          ;PORTC BIT2 <- 0
00520 6400 8DC0                  BSR     F2CHK
00521 6402 39                    RTS
00522 6403                       
00523 6403                       
00524                   *新拡張コマンドTBL
00525 6403 534449       NEWTBL   FCC     /SDI/         
00526 6406 D2                    FCB     'R+$80
00527 6407 534554                FCC     /SET/         
00528 640A CC                    FCB     'L+$80
00529 640B 534554                FCC     /SET/         
00530 640E D3                    FCB     'S+$80
00531 640F 53444F                FCC     /SDO/         
00532 6412 CE                    FCB     'N+$80
00533 6413 434D                  FCC     /CM/          
00534 6415 D4                    FCB     'T+$80
00535 6416              TBLEND
00536 6416 454E44                FCC     /END/         ;NEWTBL領域の終わり位置を示す
00537 6419                       END

SYMBOL TABLE

00BF FILENO     00D2 READ1      00D8 READ0      00DE BIOSV      0203 EXTNUM  
0204 EXTTBL     0206 EXTJMP     053F LBUF       9740 ERRENT     9D86 GETSTR  
C7E0 AZLCNV     DB1B LOUT1      DD53 INPUT1     FBFA RETADD     0033 TEXTOP  
93FC NEW2       9345 READY      FDF0 PIOA       FDF1 PIOB       FDF2 PIOC    
FDF3 PIOR       FD04 STOPF      FBFC BSRES      FBFE ROMENT     FC7F BOTSTK  
FFCF NMIRTI     FFFC PNMI       6000 TRNS       600C TRNS1      6028 PIOINI  
6035 START      6048 BIOSF      604E ST1        6058 NEWJMP     605E PRC1    
6066 NEWTRN2    606E NEWTRN3    6076 NEWTRN4    607E NEWTRN5    6086 NEWTRN6 
6089 SDIR_PRG   60A5 SDIR1      60BA SDIR2      60C5 SDIR3      60D3 DL1     
60D7 DL2        60ED DL3        60FE DL33       6100 DL4        6104 DL9     
6108 DL91       6124 DL5        612B DL6        613A DL61       6145 DL62    
6149 DL7        614B DL8        6150 SDIR99     6151 ERRNAME    615D ERRNM1  
6162 ERRNM2     6167 SETL_PRG   6189 SETL1      61A5 SETS_PRG   61C5 SETS1   
61E1 SDON_PRG   61F1 CMT_PRG    6200 ERRC       620C ERR1       6216 ERR2    
6220 ERR3       622A ERR4       6234 ERR99      6238 ERRR       623C BIOSR   
6252 BIOSR1     6255 BIOSR2     6258 BIOSR3     625B MSG1       626F MSG3    
6283 MSG4       6297 MSG5       62A3 MSG6       62B0 MSGKEY     62D7 ERR_F0  
62F0 ERR_F1     6301 ERR_F2     6313 ERR_F4     631F ERR_F5     6336 ERR_F99 
6346 MOTOR      634C MOTOROFF   6358 MOTORON    6364 WRITE1BY   6371 RET1    
6376 ERR11      637F ERR        6388 ERR_F6     63AB READ1BYT   63BA F1CHK   
63C2 F2CHK      63CA RCVBYTE    63E0 SNDBYTE    63F1 SND4BIT    6403 NEWTBL  
6416 TBLEND     

Total symbol=106
Total errors=0
